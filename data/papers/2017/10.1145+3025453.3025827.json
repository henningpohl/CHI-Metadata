{
  "doi": "10.1145/3025453.3025827",
  "title": "Suggesting API Usage to Novice Programmers with the Example Guru",
  "published": "2017-05-02",
  "proctitle": "CHI '17: Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems",
  "pages": "1105-1117",
  "year": 2017,
  "badges": [],
  "abstract": "Programmers, especially novices, often have difficulty learning new APIs (Application Programming Interfaces). Existing research has not fully addressed novice programmers' unawareness of all available API methods. To help novices discover new and appropriate uses for API methods, we designed a system called the Example Guru. The Example Guru suggests context-relevant API methods based on each programmer's code. The suggestions provide contrasting examples to demonstrate how to use the API methods. To evaluate the effectiveness of the Example Guru, we ran a study comparing novice programmers' use of the Example Guru and documentation-inspired API information. We found that twice as many participants accessed the Example Guru suggestions compared to documentation and that participants used more than twice as many new API methods after accessing suggestions than documentation.",
  "tags": [
    "examples",
    "novice programming",
    "APIs",
    "programming support"
  ],
  "authors": [
    {
      "name": "Michelle Ichinco",
      "institution": "Washington University in St. Louis, St. Louis, MO, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81502805954",
      "orcid": "missing"
    },
    {
      "name": "Wint Yee Hnin",
      "institution": "Washington University in St. Louis, St. Louis, MO, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659159989",
      "orcid": "missing"
    },
    {
      "name": "Caitlin L. Kelleher",
      "institution": "Washington University in St. Louis, St. Louis, MO, USA",
      "img": "/do/10.1145/contrib-81100607695/rel-imgonly/ckelleher.jpg",
      "acmid": "81100607695",
      "orcid": "missing"
    }
  ],
  "references": [
    {
      "text": "Muhammad Asaduzzaman, Chanchal K Roy, and Kevin A Schneider. 2015. PARC: Recommending API methods parameters. In Software Maintenance and Evolution (ICSME), 2015 IEEE International Conference on. IEEE, 330--332.  ",
      "doi": "10.1109/ICSM.2015.7332481"
    },
    {
      "text": "Sushil K Bajracharya, Joel Ossher, and Cristina V Lopes. 2010. Leveraging usage similarity for effective retrieval of examples in code repositories. In Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering. ACM, 157--166.  ",
      "doi": "10.1145/1882291.1882316"
    },
    {
      "text": "Laura Beckwith, Cory Kissinger, Margaret Burnett, Susan Wiedenbeck, Joseph Lawrance, Alan Blackwell, and Curtis Cook. 2006. Tinkering and gender in end-user programmers' debugging. In Proceedings of the SIGCHI conference on Human Factors in computing systems. ACM, 231--240.  ",
      "doi": "10.1145/1124772.1124808"
    },
    {
      "text": "Joel Brandt, Philip J. Guo, Joel Lewenstein, Mira Dontcheva, and Scott R. Klemmer. 2009. Two studies of opportunistic programming: interleaving web foraging, learning, and writing code. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1589--1598.  ",
      "doi": "10.1145/1518701.1518944"
    },
    {
      "text": "Marcel Bruch, Martin Monperrus, and Mira Mezini. 2009. Learning from examples to improve code completion systems. In Proceedings of the the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering. ACM, 213--222.  ",
      "doi": "10.1145/1595696.1595728"
    },
    {
      "text": "Margaret Burnett, Scott D. Fleming, Shamsi Iqbal, Gina Venolia, Vidya Rajaram, Umer Farooq, Valentina Grigoreanu, and Mary Czerwinski. 2010. Gender differences and programming environments: across programming populations. In Proceedings of the 2010 ACM-IEEE international symposium on empirical software engineering and measurement. ACM, 28.  ",
      "doi": "10.1145/1852786.1852824"
    },
    {
      "text": "Michelene TH Chi, Miriam Bassok, Matthew W. Lewis, Peter Reimann, and Robert Glaser. 1989. Self-explanations: How students study and use examples in learning to solve problems. Cognitive science 13, 2 (1989), 145--182.",
      "doi": ""
    },
    {
      "text": "Class : CSV (Ruby 1.9.3,) 2016. http: //ruby-doc.org/stdlib-1.9.3/libdoc/csv/rdoc/CSV.html. (2016). Accessed: 2016-09--20.",
      "doi": ""
    },
    {
      "text": "Joel Cordeiro, Bruno Antunes, and Paulo Gomes. 2012. Context-based recommendation to support problem solving in software development. In 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE). IEEE, 85--89. ",
      "doi": "10.5555/2666719.2666739"
    },
    {
      "text": "Davor Cubranic and Gail C Murphy. 2003. Hipikat: Recommending pertinent software development artifacts. In Software Engineering, 2003. Proceedings. 25th International Conference on. IEEE, 408--418. ",
      "doi": "10.5555/776816.776866"
    },
    {
      "text": "Uri Dekel and James D Herbsleb. 2009. Improving API documentation usability with knowledge pushing. In Proceedings of the 31st International Conference on Software Engineering. IEEE Computer Society, 320--330.  ",
      "doi": "10.1109/ICSE.2009.5070532"
    },
    {
      "text": "Christian D\u00f6rner, Andrew R Faulring, and Brad A Myers. 2014. EUKLAS: Supporting copy-and-paste strategies for integrating example code. In Proceedings of the 5th Workshop on Evaluation and Usability of Programming Languages and Tools. ACM, 13--20.  ",
      "doi": "10.1145/2688204.2688208"
    },
    {
      "text": "Martin Fowler and Kent Beck. 1999. Refactoring: Improving the Design of Existing Code. Addison-Wesley Professional. ",
      "doi": "10.5555/311424"
    },
    {
      "text": "C Ailie Fraser, Mira Dontcheva, Holger Winnem\u00f6ller, Sheryl Ehrlich, and Scott Klemmer. 2016. DiscoverySpace: Suggesting Actions in Complex Software. In Proceedings of the 2016 ACM Conference on Designing Interactive Systems. ACM, 1221--1232.  ",
      "doi": "10.1145/2901790.2901849"
    },
    {
      "text": "Kyle James Harms, Jason Chen, and Caitlin L. Kelleher. 2016. Distractors in Parsons Problems Decrease Learning Efficiency for Young Novice Programmers. In Proceedings of the 2016 ACM Conference on International Computing Education Research. ACM, 241--250.  ",
      "doi": "10.1145/2960310.2960314"
    },
    {
      "text": "Kyle J. Harms, Dennis Cosgrove, Shannon Gray, and Caitlin Kelleher. 2013. Automatically generating tutorials to enable middle school children to learn programming independently. In Proceedings of the 12th International Conference on Interaction Design and Children. ACM, 11--19.  ",
      "doi": "10.1145/2485760.2485764"
    },
    {
      "text": "Bj\u00f6rn Hartmann, Daniel MacDougall, Joel Brandt, and Scott R Klemmer. 2010. What would other programmers do: suggesting solutions to error messages. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1019--1028.  ",
      "doi": "10.1145/1753326.1753478"
    },
    {
      "text": "Lars Heinemann, Veronika Bauer, Markus Herrmannsdoerfer, and Benjamin Hummel. 2012. Identifier-based context-dependent API method recommendation. In Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on. IEEE, 31--40.  ",
      "doi": "10.1109/CSMR.2012.14"
    },
    {
      "text": "Reid Holmes and Robert J Walker. 2008. A newbie's guide to Eclipse APIs. In Proceedings of the 2008 international working conference on Mining software repositories. ACM, 149--152.  ",
      "doi": "10.1145/1370750.1370787"
    },
    {
      "text": "Reid Holmes, Robert J Walker, and Gail C Murphy. 2006. Approximate structural context matching: An approach to recommend relevant examples. IEEE Transactions on Software Engineering 32, 12 (2006), 952--970.  ",
      "doi": "10.1109/TSE.2006.117"
    },
    {
      "text": "Michelle Ichinco and Caitlin Kelleher. 2015. Exploring novice programmer example use. In Visual Languages and Human-Centric Computing (VL/HCC), 2015 IEEE Symposium on. IEEE, 63--71.",
      "doi": ""
    },
    {
      "text": "Takeo Igarashi and John F Hughes. 2001. A suggestive interface for 3D drawing. In Proceedings of the 14th annual ACM symposium on User interface software and technology. ACM, 173--181.  ",
      "doi": "10.1145/502348.502379"
    },
    {
      "text": "Will Jernigan, Amber Horvath, Michael Lee, Margaret Burnett, Taylor Cuilty, Sandeep Kuttal, Anicia Peters, Irwin Kwan, Faezeh Bahmani, and Andrew Ko. 2015. A principled evaluation for a principled Idea Garden. In Visual Languages and Human-Centric Computing (VL/HCC), 2015 IEEE Symposium on. IEEE, 235--243.",
      "doi": ""
    },
    {
      "text": "M. Gail Jones, Laura Brader-Araje, Lisa Wilson Carboni, Glenda Carter, Melissa J. Rua, Eric Banilower, and Holly Hatch. 2000. Tool time: Gender and students' use of tools, control, and authority. Journal of Research in Science Teaching 37, 8 (2000), 760--783.",
      "doi": ""
    },
    {
      "text": "David Kawrykow and Martin P Robillard. 2009. Improving API usage through automatic detection of redundant code. In Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering. IEEE Computer Society, 111--122.  ",
      "doi": "10.1109/ASE.2009.62"
    },
    {
      "text": "Muhammad Asaduzzaman Chanchal K Roy Kevin and A Schneider Daqing Hou. 2014. CSCC: simple, efficient, context sensitive code completion. (2014).",
      "doi": ""
    },
    {
      "text": "Md Adnan Alam Khan, Volodymyr Dziubak, and Andrea Bunt. 2015. Exploring personalized command recommendations based on information found in Web documentation. In Proceedings of the 20th International Conference on Intelligent User Interfaces. ACM, 225--235.  ",
      "doi": "10.1145/2678025.2701387"
    },
    {
      "text": "Andrew Jensen Ko, Brad A. Myers, and Htet Htet Aung. 2004. Six learning barriers in end-user programming systems. In Visual Languages and Human Centric Computing, 2004 IEEE Symposium on. IEEE, 199--206.  ",
      "doi": "10.1109/VLHCC.2004.47"
    },
    {
      "text": "Benjamin Lafreniere, Parmit K Chilana, Adam Fourney, and Michael A Terry. 2015. These Aren't the Commands You're Looking For: Addressing False Feedforward in Feature-Rich Software. In Proceedings of the 28th Annual ACM Symposium on User Interface Software & Technology. ACM, 619--628.  ",
      "doi": "10.1145/2807442.2807482"
    },
    {
      "text": "Wei Li, Justin Matejka, Tovi Grossman, Joseph A. Konstan, and George Fitzmaurice. 2011. Design and evaluation of a command recommendation system for software applications. ACM Transactions on Computer-Human Interaction (TOCHI) 18, 2 (2011), 6.  ",
      "doi": "10.1145/1970378.1970380"
    },
    {
      "text": "Looking Glass Community 2016. https://lookingglass.wustl.edu/. (2016). Accessed: 2013-02--24.",
      "doi": ""
    },
    {
      "text": "Yuri Malheiros, Alan Moraes, Cleyton Trindade, and Silvio Meira. 2012. A source code recommender system to support newcomers. In 2012 IEEE 36th Annual Computer Software and Applications Conference. IEEE, 19--24.  ",
      "doi": "10.1109/COMPSAC.2012.11"
    },
    {
      "text": "David Mandelin, Lin Xu, Rastislav Bod\u00edk, and Doug Kimelman. 2005. Jungloid mining: helping to navigate the API jungle. In ACM SIGPLAN Notices, Vol. 40. ACM, 48--61.  ",
      "doi": "10.1145/1064978.1065018"
    },
    {
      "text": "Justin Matejka, Tovi Grossman, and George Fitzmaurice. 2011. Ambient help. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2751--2760.  ",
      "doi": "10.1145/1978942.1979349"
    },
    {
      "text": "Justin Matejka, Wei Li, Tovi Grossman, and George Fitzmaurice. 2009. CommunityCommands: command recommendations for software applications. In Proceedings of the 22nd annual ACM symposium on User interface software and technology. ACM, 193--202.  ",
      "doi": "10.1145/1622176.1622214"
    },
    {
      "text": "J. Nathan Matias, Sayamindu Dasgupta, and Benjamin Mako Hill. 2016. Skill Progression in Scratch Revisited. In Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems. ACM, 1486--1490.  ",
      "doi": "10.1145/2858036.2858349"
    },
    {
      "text": "Frank McCarey, Mel O Cinneide, and Nicholas Kushmerick. 2006. A recommender agent for software libraries: An evaluation of memory-based and model-based collaborative filtering. In Proceedings of the IEEE/WIC/ACM international conference on Intelligent Agent Technology. IEEE Computer Society, 154--162.  ",
      "doi": "10.1109/IAT.2006.23"
    },
    {
      "text": "Joan Meyers-Levy. 1986. Gender differences in information processing: A selectivity interpretation. Ph.D. Dissertation. Northwestern University.",
      "doi": ""
    },
    {
      "text": "Joan Meyers-Levy and Durairaj Maheswaran. 1991. Exploring differences in males' and females' processing strategies. Journal of Consumer Research 18, 1 (1991), 63--70.",
      "doi": ""
    },
    {
      "text": "Sundar Murugappan, Subramani Sellamani, and Karthik Ramani. 2009. Towards beauti?cation of freehand sketches using suggestions. In Proceedings of the 6th Eurographics Symposium on Sketch-Based Interfaces and Modeling. ACM, 69--76.  ",
      "doi": "10.1145/1572741.1572754"
    },
    {
      "text": "Stephen Oney and Joel Brandt. 2012. Codelets: linking interactive documentation and example code in the editor. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2697--2706.  ",
      "doi": "10.1145/2207676.2208664"
    },
    {
      "text": "Jean Piaget. 1972. Intellectual evolution from adolescence to adulthood. Human development 15, 1 (1972), 1--12.",
      "doi": ""
    },
    {
      "text": "Python Tutor 2017. Python Tutor - Visualize Python, Java, JavaScript, TypeScript, Ruby, C, and C++ code execution. http://pythontutor.com/. (2017).",
      "doi": ""
    },
    {
      "text": "Luisa Fernanda Hern\u00e1ndez Ram\u00edrez and others. 2016. API recommendation system in Software Engineering. (2016).",
      "doi": ""
    },
    {
      "text": "Romain Robbes and Michele Lanza. 2008. How program history can improve code completion. In Automated Software Engineering, 2008. ASE 2008. 23rd IEEE/ACM International Conference on. IEEE, 317--326.  ",
      "doi": "10.1109/ASE.2008.42"
    },
    {
      "text": "Martin P. Robillard. 2009. What makes APIs hard to learn? Answers from developers. IEEE software 26, 6 (2009), 27--34.  ",
      "doi": "10.1109/MS.2009.193"
    },
    {
      "text": "Martin P. Robillard and Robert Deline. 2011. A field study of API learning obstacles. Empirical Software Engineering 16, 6 (2011), 703--732.  ",
      "doi": "10.1007/s10664-010-9150-8"
    },
    {
      "text": "Christopher Scaffidi and Christopher Chambers. 2012. Skill progression demonstrated by users in the Scratch animation environment. International Journal of Human-Computer Interaction 28, 6 (2012), 383--398.",
      "doi": ""
    },
    {
      "text": "Jeffrey Stylos, Andrew Faulring, Zizhuang Yang, and Brad A Myers. 2009. Improving API documentation using API usage information. In 2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 119--126.  ",
      "doi": "10.1109/VLHCC.2009.5295283"
    },
    {
      "text": "Suresh Thummalapenta and Tao Xie. 2007. ParseWEB: a programmer assistant for reusing open source code on the web. In Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering. ACM, 204--213.  ",
      "doi": "10.1145/1321631.1321663"
    },
    {
      "text": "Aaron Wilson, Margaret Burnett, Laura Beckwith, Orion Granatir, Ledah Casburn, Curtis Cook, Mike Durham, and Gregg Rothermel. 2003. Harnessing curiosity to increase correctness in end-user programming. In Proceedings of the SIGCHI conference on Human factors in computing systems. ACM, 305--312.  ",
      "doi": "10.1145/642611.642665"
    },
    {
      "text": "Benjamin Xie and Hal Abelson. 2016. Skill Progression in MIT App Inventor. Visual Languages and Human-Centric Computing (VL/HCC), 2016 IEEE Symposium on (2016).",
      "doi": ""
    },
    {
      "text": "Cheng Zhang, Juyuan Yang, Yi Zhang, Jing Fan, Xin Zhang, Jianjun Zhao, and Peizhao Ou. 2012. Automatic parameter recommendation for practical API usage. In Proceedings of the 34th International Conference on Software Engineering. IEEE Press, 826--836. ",
      "doi": "10.5555/2337223.2337321"
    },
    {
      "text": "Hao Zhong, Tao Xie, Lu Zhang, Jian Pei, and Hong Mei. 2009. MAPO: Mining and recommending API usage patterns. In European Conference on Object-Oriented Programming. Springer, 318--343.  ",
      "doi": "10.1007/978-3-642-03013-0_15"
    },
    {
      "text": "Sedigheh Zolaktaf and Gail C Murphy. 2015. What to learn next: recommending commands in a feature-rich environment. In 2015 IEEE 14th International Conference on Machine Learning and Applications (ICMLA). IEEE, 1038--1044.",
      "doi": ""
    }
  ]
}
{
  "doi": "10.1145/2556288.2557350",
  "title": "Design considerations for parallel performance tools",
  "published": "2014-04-26",
  "proctitle": "CHI '14: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
  "pages": "2501-2510",
  "year": 2014,
  "badges": [],
  "abstract": "In recent years there has been a shift in microprocessor manufacture from building single-core processors towards providing multiple cores on the same chip. This shift has meant that a much wider population of developers are faced with the task of developing parallel software: a difficult, time consuming and expensive process. With the aim of identifying issues, emerging practices and design opportunities for support, we present in this paper a qualitative study in which we interviewed a range of software developers, in both industry and academia. We then perform a systematic analysis of the data and identify several cross-cutting themes. These analysis themes include the practical relevance of the probe effect, the significance of orchestration models in development and the mismatch between currently available tools and developers' needs. We also identify an important characteristic of parallel programming, where the process of optimisation goes hand in hand with the process of debugging, as opposed to clearer distinctions which may be made in traditional programming. We conclude with reflection on how the study can inform the design of software tools to support developers in the endeavour of parallel programming.",
  "authors": [
    {
      "name": "Roman Atachiants",
      "institution": "Trinity College, The University of Dublin, Dublin, Ireland",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "87958713457",
      "orcid": "missing"
    },
    {
      "name": "David Gregg",
      "institution": "Trinity College, The University of Dublin, Dublin, Ireland",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81100422211",
      "orcid": "missing"
    },
    {
      "name": "Kim Jarvis",
      "institution": "Trinity College, The University of Dublin, Dublin, Ireland",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659297241",
      "orcid": "missing"
    },
    {
      "name": "Gavin Doherty",
      "institution": "Trinity College, The University of Dublin, Dublin, Ireland",
      "img": "/do/10.1145/contrib-81100175529/rel-imgonly/81100175529.jpg",
      "acmid": "81100175529",
      "orcid": "0000-0002-9617-7008"
    }
  ],
  "references": [
    {
      "text": "LJ Ball and TC Ormerod. Structured and opportunistic processing in design: A critical discussion. International Journal of Human-Computer Studies, 1995.  ",
      "doi": "10.1006/ijhc.1995.1038"
    },
    {
      "text": "J. Bonar and B. Liffick. A visual programming language for novices. Technical report, 1987.",
      "doi": ""
    },
    {
      "text": "J. Bonar and E. Soloway. Preprogramming Knowledge: A Major Source of Misconceptions in Novice Programmers. Human-Computer Interaction, 1(2):133--161, 1985.  ",
      "doi": "10.1207/s15327051hci0102_3"
    },
    {
      "text": "BD Boulay, T Ofishea, and J Monk. The black box inside the glass box: Presenting computing concepts to novices. International Journal of Human-Computer Studies, 51(2):265--277, 1999.  ",
      "doi": "10.1006/ijhc.1981.0309"
    },
    {
      "text": "B Cantrill, MW Shapiro, and AH Leventhal. Dynamic Instrumentation of Production Systems. USENIX Annual Technical Conference, 2004. ",
      "doi": "10.5555/1247415.1247417"
    },
    {
      "text": "T Casavant. Tools and Methods for Visualization of Parallel Systems and Computations Guest Editors Introduction, June 1993.",
      "doi": ""
    },
    {
      "text": "J. Gould; P. Drongowski. An Exploratory Study of Computer Program Debugging. Human Factors, 16:258--277, 1974.",
      "doi": ""
    },
    {
      "text": "R. Eccles and D. Stacey. Understanding the Parallel Programmer. 20th International Symposium on High-Performance Computing, pages 12'12, 2006.  ",
      "doi": "10.1109/HPCS.2006.51"
    },
    {
      "text": "V. Fix, S. Wiedenbeck, and J. Scholtz. Mental representations of programs by novices and experts. In Proc. INTERACT '93/ACM CHI '93, pages 74--79, 1993.  ",
      "doi": "10.1145/169059.169088"
    },
    {
      "text": "T. Fritz and G.C. Murphy. Using information fragments to answer the questions developers ask. Proc. ACM/IEEE ICSE 2010, 1:175, 2010.  ",
      "doi": "10.1145/1806799.1806828"
    },
    {
      "text": "J. Gait. A probe effect in concurrent programs. Software, practice & experience, 16(3):225--233, 1986.  ",
      "doi": "10.1002/spe.4380160304"
    },
    {
      "text": "D.R. Goldenson and B.J. Wang. Use of Structure Editing Tools by Novice Programmers. In Empirical Studies of Programming: Fourth Work, pages 99--120, 1991.",
      "doi": ""
    },
    {
      "text": "T R G Green and M Petre. Usability Analysis of Visual Programming Environments: A 'Cognitive Dimensions' Framework. Journal of Visual Languages and Computing, 7(2):131--174, 1996.",
      "doi": ""
    },
    {
      "text": "L. Gugerty and G Olson. Debugging by skilled and novice programmers. In Proc. ACM CHI '86, number April, pages 171--174, 1986.  ",
      "doi": "10.1145/22627.22367"
    },
    {
      "text": "H. Sutter. Understanding Parallel Performance. Dr. Dobb's Journal, 2008.",
      "doi": ""
    },
    {
      "text": "J.E. Hannay, C. MacLeod, J. Singer, H.P. Langtangen, D. Pfahl, and G. Wilson. How do scientists develop and use scientific software' 2009 ICSE Workshop on Software Engineering for Computational Science and Engineering, pages 1--8, May 2009.  ",
      "doi": "10.1109/SECSE.2009.5069155"
    },
    {
      "text": "MT Heath. Visualizing the performance of parallel programs. IEEE Software, pages 29--39, 1991.  ",
      "doi": "10.1109/52.84214"
    },
    {
      "text": "Lorin Hochstein and Jeff Carver. Parallel programmer productivity: A case study of novice parallel programmers. High Performance Networking and Computing, pages 1--9, 2005.",
      "doi": "10.1109/SC.2005.53"
    },
    {
      "text": "G. Kammer, P.and Bolcer, R. Taylor, A. Hitomi, and M. Bergman. Techniques for Supporting Dynamic and Adaptive Workflow. Computer Supported Cooperative Work, 9(3--4):269'292, 2000.  ",
      "doi": "10.1023/A%3A1008747109146"
    },
    {
      "text": "AJ Ko and BA Myers. An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks. IEEE Transactions on Software Engineering, 32(12):971--987, 2006.  ",
      "doi": "10.1109/TSE.2006.116"
    },
    {
      "text": "J Koenemann and SP Robertson. Expert problem solving strategies for program comprehension. Proc ACM CHI '91, pages 125--130, 1991.  ",
      "doi": "10.1145/108844.108863"
    },
    {
      "text": "T.D. LaToza and B.A. Myers. Hard to answer questions about code. In 'Second Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU'2010) at SPLASH/Onward! , 2010.  ",
      "doi": "10.1145/1937117.1937125"
    },
    {
      "text": "J. Lawrance, C. Bogart, M. Burnett, and R. Bellamy. How people debug, revisited: An information foraging theory perspective. IEEE Transactions on Software Engineering, 39(2):197--215, 2009.  ",
      "doi": "10.1109/TSE.2010.111"
    },
    {
      "text": "CH LeDoux and DS Parker Jr. Saving Traces for ADA Debugging. ACM SIGAda Ada Letters, 1985.  ",
      "doi": "10.1145/324422.324385"
    },
    {
      "text": "M. Luff. Empirically investigating parallel programming paradigms: A null result. Usability of Programming Languages and Tools, (October), 2009.",
      "doi": ""
    },
    {
      "text": "T. Mattson and M. Wrinn. Parallel programming: can we PLEASE get it right this time' Proc. 45th Annual Design Automation Conference, pages 7--11, 2008.  ",
      "doi": "10.1145/1391469.1391474"
    },
    {
      "text": "R.E. Mayer. The Psychology of How Novices Learn Computer Programming. ACM Computing Surveys, 13(1):121--141, January 1981.  ",
      "doi": "10.1145/356835.356841"
    },
    {
      "text": "R. McCauley, S. Fitzgerald, G. Lewandowski, L. Murphy, B. Simon, L. Thomas, and C. Zander. Debugging: a review of the literature from an educational perspective. Computer Science Education, 18(2):67--92, June 2008.",
      "doi": ""
    },
    {
      "text": "P.E. McKenney, M. Gupta, M.M. Michael, Phil Howard, Joshua Triplett, and Jonathan Walpole. Is parallel programming hard, and if so, why' Control, 2002.",
      "doi": ""
    },
    {
      "text": "B.P. Miller, M.D. Callaghan, J.M. Cargille, J.K. Hollingsworth, R.B. Irvin, K.L. Karavanic, K. Kunchithapadam, and T. Newhall. The Paradyn parallel performance measurement tool. Computer, 28(11):37--46, 1995.  ",
      "doi": "10.1109/2.471178"
    },
    {
      "text": "MJ Muller and S. Kogan. Grounded theory method in HCI and CSCW. Cambridge: IBM Center for Social Software, pages 1--46, 2010.",
      "doi": ""
    },
    {
      "text": "CM Pancake and S Utter. Models for visualization in parallel debuggers. In Proc. ACM/IEEE conference on Supercomputing, pages 627--636, 1989.  ",
      "doi": "10.1145/76263.76334"
    },
    {
      "text": "J Pane and B Myers. Usability issues in the design of novice programming systems. Technical Report August, 1996.",
      "doi": ""
    },
    {
      "text": "D. Piorkowski, S. Fleming, I. Kwan, M. Burnett, C. Scaffidi, R. Bellamy, and J. Jordahl. The whats and hows of programmers' foraging diets. Proc. ACM CHI 2013, pages 3063--3072, 2013.  ",
      "doi": "10.1145/2470654.2466418"
    },
    {
      "text": "P. Pirolli and S. Card. Information foraging in information access environments. Proc. CHI '95, pages 51--58, 1995.  ",
      "doi": "10.1145/223904.223911"
    },
    {
      "text": "P. Prabhu, Y. Zhang, S. Ghosh, D.I. August, J. Huang, S. Beard, H. Kim, T. Oh, T.B. Jablin, N.P. Johnson, M. Zoufaly, A. Raman, F. Liu, and D. Walker. A survey of the practice of computational science. State of the Practice Reports on SC '11, page 1, 2011.  ",
      "doi": "10.1145/2063348.2063374"
    },
    {
      "text": "S. Fleming. Successful Strategies for Debugging Concurrent Software: An Empirical Investigation. PhD thesis, 2009. ",
      "doi": "10.5555/1751506"
    },
    {
      "text": "C. Sadowski and A. Shewmaker. The Last Mile : Parallel Programming and Usability. FOSER, 2010.  ",
      "doi": "10.1145/1882362.1882426"
    },
    {
      "text": "J. Sillito, G.C. Murphy, and K. De Volder. Questions programmers ask during software evolution tasks. In SIGSOFT'06/FSE-14: Proceedings of the 13th ACM SIGSOFT and 14th international symposium on Foundations of Software Engineering, 2006.  ",
      "doi": "10.1145/1181775.1181779"
    },
    {
      "text": "S Siu, M De Simone, D Goswami, and A Singh. Design Patterns for Parallel Programming. PDPTA, 1996.",
      "doi": ""
    },
    {
      "text": "DC Smith, A Cypher, and J Spohrer. KidSim: programming agents without a programming language. Communications of the ACM, 37(7):54--67, June 1994.  ",
      "doi": "10.1145/176789.176795"
    },
    {
      "text": "A.L Strauss and J. Corbin. Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory. Sage, 2nd edition, 1998.",
      "doi": ""
    },
    {
      "text": "I. Vessey. Expertise in Debugging Computer Programs: An Analysis of the Content of Verbal Protocols. IEEE Transactions on Systems, Man, and Cybernetics, 16(5):621--637, September 1986.  ",
      "doi": "10.1109/TSMC.1986.289308"
    }
  ]
}
{
  "doi": "10.1145/3544548.3580683",
  "title": "A Study of Editor Features in a Creative Coding Classroom",
  "published": "2023-04-19",
  "proctitle": "CHI '23: Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-15",
  "year": 2023,
  "badges": [],
  "abstract": "Creative coding is a rapidly expanding domain for both artistic expression and computational education. Numerous libraries and IDEs support creative coding, however there has been little consideration of how the environments themselves might be designed to serve these twin goals. To investigate this gap, we implemented and used an experimental editor to teach a sequence of college and high-school creative coding courses. In the first year, we conducted a log analysis of student work (n=39) and surveys regarding prospective features (n=25). These guided our implementation of common enhancements (e.g. color pickers) as well as uncommon ones (e.g. bidirectional shape editing). In the second year, we studied the effects of these features through logging (n=39+) and survey (n=23) studies. Reflecting on the results, we identify opportunities to improve creativity- and novice-focused IDEs and highlight tensions in their design\u2014as in tools that augment artistry or efficiency but may be perceived as hindering learning.",
  "authors": [
    {
      "name": "Andrew M Mcnutt",
      "institution": "University of Chicago, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659527152",
      "orcid": "0000-0001-8255-4258"
    },
    {
      "name": "Anton Outkine",
      "institution": "University of Chicago, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99660782116",
      "orcid": "0000-0003-4796-9612"
    },
    {
      "name": "Ravi Chugh",
      "institution": "University of Chicago, United States",
      "img": "/do/10.1145/contrib-81435596644/rel-imgonly/ravi09.jpg",
      "acmid": "81435596644",
      "orcid": "0000-0002-1339-2889"
    }
  ],
  "references": [
    {
      "text": "2021. p5.js. https://p5js.org/. Accessed 9/21/21.",
      "doi": ""
    },
    {
      "text": "2021. p5.js: createSlider. https://p5js.org/reference/#/p5/createSlider. Accessed 9/17/21.",
      "doi": ""
    },
    {
      "text": "2021. p5.js editor. https://github.com/processing/p5.js-web-editor. Accessed 9/17/21.",
      "doi": ""
    },
    {
      "text": "2021. Utopia. https://github.com/concrete-utopia/utopia.",
      "doi": ""
    },
    {
      "text": "2022. Tweakable: an online programming environment for audio and video. https://tweakable.org/. Accessed 8/25/22.",
      "doi": ""
    },
    {
      "text": "Khan Academy. 2021. Computer Programming. https://www.khanacademy.org/computing/computer-programming. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Susan\u00a0A Ambrose, Michael\u00a0W Bridges, Michele DiPietro, Marsha\u00a0C Lovett, and Marie\u00a0K Norman. 2010. How Learning Works: Seven Research-based Principles for Smart Teaching. John Wiley & Sons, New York.",
      "doi": ""
    },
    {
      "text": "Leif Andersen, Michael Ballantyne, and Matthias Felleisen. 2020. Adding interactive visual syntax to textual code. Proceedings of the ACM on Programming Languages (OOPSLA) 4 (2020), 1\u201328.",
      "doi": "10.1145/3428290"
    },
    {
      "text": "Kentaro Asai, Tsukasa Fukusato, and Takeo Igarashi. 2020. Integrated Development Environment with Interactive Scatter Plot for Examining Statistical Modeling. In SIGCHI Conference on Human Factors in Computing Systems. 1\u20137.",
      "doi": ""
    },
    {
      "text": "Thomas Ball, Abhijith Chatra, Peli de Halleux, Steve Hodges, Michal Moskal, and Jacqueline Russell. 2019. Microsoft MakeCode: Embedded Programming for Education, in Blocks and TypeScript. In ACM SIGPLAN Workshop on SPLASH-E. ACM, 7\u201312. https://doi.org/10.1145/3358711.3361630",
      "doi": "10.1145/3358711.3361630"
    },
    {
      "text": "Shraddha Barke, Michael\u00a0B James, and Nadia Polikarpova. 2022. Grounded Copilot: How Programmers Interact with Code-Generating Models. arXiv preprint arXiv:2206.15000(2022).",
      "doi": ""
    },
    {
      "text": "Daniel\u00a0W Barowy, Emery\u00a0D Berger, and Benjamin Zorn. 2018. ExceLint: automatically finding spreadsheet formula errors. Proceedings of the ACM on Programming Languages (OOPSLA) 2 (2018), 1\u201326.",
      "doi": "10.1145/3276518"
    },
    {
      "text": "Lyn Bartram, Michael Correll, and Melanie Tory. 2022. Untidy Data: The Unreasonable Effectiveness of Tables. IEEE Transactions on Visualization and Computer Graphics 28, 1(2022), 686\u2013696. https://doi.org/10.1109/TVCG.2021.3114830",
      "doi": "10.1109/TVCG.2021.3114830"
    },
    {
      "text": "beautify web. 2021. JSBeautify. https://github.com/beautify-web/js-beautify. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Brett\u00a0A. Becker, Paul Denny, Raymond Pettit, Durell Bouchard, Dennis\u00a0J. Bouvier, Brian Harrington, Amir Kamil, Amey Karkare, Chris McDonald, Peter-Michael Osera, Janice\u00a0L. Pearce, and James Prather. 2019. Compiler Error Messages Considered Unhelpful: The Landscape of Text-Based Programming Error Message Research. In Working Group Reports on Innovation and Technology in Computer Science Education, ITiCSE-WGR. ACM, 177\u2013210. https://doi.org/10.1145/3344429.3372508",
      "doi": "10.1145/3344429.3372508"
    },
    {
      "text": "Laura Beckwith, Cory Kissinger, Margaret\u00a0M. Burnett, Susan Wiedenbeck, Joseph Lawrance, Alan\u00a0F. Blackwell, and Curtis\u00a0R. Cook. 2006. Tinkering and gender in end-user programmers\u2019 debugging. In SIGCHI Conference on Human Factors in Computing Systems. ACM, 231\u2013240. https://doi.org/10.1145/1124772.1124808",
      "doi": "10.1145/1124772.1124808"
    },
    {
      "text": "Cameron Burgess, Dan Lockton, Maayan Albert, and Daniel Cardoso\u00a0Llach. 2020. Stamper: An Artboard-Oriented Creative Coding Environment. In Extended Abstracts of the CHI Conference on Human Factors in Computing Systems. ACM, 1\u20139. https://doi.org/10.1145/3334480.3382994",
      "doi": "10.1145/3334480.3382994"
    },
    {
      "text": "Margaret\u00a0M. Burnett, Anicia Peters, Charles Hill, and Noha Elarief. 2016. Finding Gender-Inclusiveness Software Issues with GenderMag: A Field Investigation. In SIGCHI Conference on Human Factors in Computing Systems. ACM, 2586\u20132598. https://doi.org/10.1145/2858036.2858274",
      "doi": "10.1145/2858036.2858274"
    },
    {
      "text": "Mike Cao. 2021. Umami. https://umami.is/. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Adam\u00a0S Carter, Christopher\u00a0D Hundhausen, and Olusola Adesope. 2015. The Normalized Programming State Model: Predicting Student Performance in Computing Courses Based on Programming Behavior. In Proceedings of the eleventh annual International Conference on International Computing Education Research. ACM, 141\u2013150. https://doi.org/10.1145/2787622.2787710",
      "doi": "10.1145/2787622.2787710"
    },
    {
      "text": "Kate Compton. 2021. Conversation Starter: Imagining Autotelic IDEs. In CEUR Workshop Proceedings, Vol.\u00a03217. CEUR-WS.",
      "doi": ""
    },
    {
      "text": "Kate Compton, Ben Kybartas, and Michael Mateas. 2015. Tracery: An Author-Focused Generative Text Tool. In International Conference on Interactive Digital Storytelling. Springer, 154\u2013161. https://doi.org/10.1007/978-3-319-27036-4_14",
      "doi": ""
    },
    {
      "text": "CSSLint. 2021. CSSLint. https://github.com/CSSLint/csslint. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Fred\u00a0D Davis. 1989. Perceived Usefulness, Perceived Ease of Use, and User Acceptance of Information Technology. MIS Quarterly (1989), 319\u2013340.",
      "doi": ""
    },
    {
      "text": "Robert\u00a0A DeLine. 2021. Glinda: Supporting data science with live programming, GUIs and a Domain-specific Language. In SIGCHI Conference on Human Factors in Computing Systems. 1\u201311.",
      "doi": "10.1145/3411764.3445267"
    },
    {
      "text": "Quan Do, Kiersten Campbell, Emmie Hine, Dzung Pham, Alex Taylor, Iris Howley, and Daniel\u00a0W Barowy. 2019. Evaluating ProDirect Manipulation in Hour of Code. In ACM SIGPLAN Symposium on SPLASH-E. 25\u201335. https://doi.org/10.1145/3358711.3361623",
      "doi": "10.1145/3358711.3361623"
    },
    {
      "text": "Marc Downie and Paul Kaiser. 2021. Field. http://openendedgroup.com/field/.",
      "doi": ""
    },
    {
      "text": "Facebook. 2022. Jest CLI Options. https://jestjs.io/docs/cli. Accessed 11/15/20.",
      "doi": ""
    },
    {
      "text": "Angelo Fraietta, Oliver Bown, Sam Ferguson, Sam Gillespie, and Liam Bray. 2019. Rapid composition for networked devices: HappyBrackets. Computer Music Journal 43, 2-3 (2019), 89\u2013108.",
      "doi": "10.1162/comj_a_00520"
    },
    {
      "text": "Jonas Frich, Michael Mose\u00a0Biskjaer, and Peter Dalsgaard. 2018. Twenty years of creativity research in human-computer interaction: Current state and future directions. In Proceedings of the 2018 Designing Interactive Systems Conference. 1235\u20131257.",
      "doi": "10.1145/3196709.3196732"
    },
    {
      "text": "Ira Greenberg. 2007. Processing: creative coding and computational art. Apress.",
      "doi": ""
    },
    {
      "text": "Ira Greenberg, Deepak Kumar, and Dianna Xu. 2012. Creative Coding and Visual Portfolios for CS1. In ACM Technical Symposium on Computer Science Education (SIGCSE). 247\u2013252. https://doi.org/10.1145/2157136.2157214",
      "doi": "10.1145/2157136.2157214"
    },
    {
      "text": "Philip Guo. 2021. Ten Million Users and Ten Years Later: Python Tutor\u2019s Design Guidelines for Building Scalable and Sustainable Research Software in Academia. In ACM Symposium on User Interface Software and Technology (UIST). https://doi.org/10.1145/3472749.3474819",
      "doi": "10.1145/3472749.3474819"
    },
    {
      "text": "Philip\u00a0J. Guo. 2013. Online Python Tutor: Embeddable Web-based Program Visualization for CS Education. In ACM Technical Symposium on Computer Science Education (SIGCSE). ACM, 579\u2013584. https://doi.org/10.1145/2445196.2445368",
      "doi": "10.1145/2445196.2445368"
    },
    {
      "text": "Mark Guzdial. 2004\u2013. Media Computation Teachers Website. http://coweb.cc.gatech.edu/mediaComp-teach.",
      "doi": ""
    },
    {
      "text": "Mark Guzdial. 2013. Exploring Hypotheses about Media Computation. In ACM Conference on International Computing Education Research (ICER).",
      "doi": "10.1145/2493394.2493397"
    },
    {
      "text": "Mark Guzdial and Andrea Forte. 2005. Design Process for a Non-Majors Computing Course. ACM SIGCSE Bulletin 37, 1 (2005), 361\u2013365. https://doi.org/10.1145/1047344.1047468",
      "doi": "10.1145/1047344.1047468"
    },
    {
      "text": "Bj\u00f6rn Hartmann, Loren Yu, Abel Allison, Yeonsoo Yang, and Scott\u00a0R Klemmer. 2008. Design as Exploration: Creating Interface Alternatives Through Parallel Authoring and Runtime Tuning. In ACM Symposium on User Interface Software and Technology (UIST). 91\u2013100. https://doi.org/10.1145/1449715.1449732",
      "doi": "10.1145/1449715.1449732"
    },
    {
      "text": "Baku Hasimoto. 2021. Glisp. https://github.com/baku89/glisp.",
      "doi": ""
    },
    {
      "text": "Marijn Haverbeke 2021. Code Mirror 6. https://codemirror.net/6/. Accessed 4/3/22.",
      "doi": ""
    },
    {
      "text": "Juha Helminen, Petri Ihantola, and Ville Karavirta. 2013. Recording and Analyzing In-Browser Programming Sessions. In Koli Calling International Conference on Computing Education Research. 13\u201322. https://doi.org/10.1145/2526968.2526970",
      "doi": "10.1145/2526968.2526970"
    },
    {
      "text": "Brian Hempel and Ravi Chugh. 2016. Semi-Automated SVG Programming via Direct Manipulation. In ACM Symposium on User Interface Software and Technology (UIST). 379\u2013390. https://doi.org/10.1145/2984511.2984575",
      "doi": "10.1145/2984511.2984575"
    },
    {
      "text": "Brian Hempel and Ravi Chugh. 2022. Maniposynth: Bimodal Tangible Functional Programming. In European Conference on Object-Oriented Programming, ECOOP(LIPIcs, Vol.\u00a0222). Schloss Dagstuhl - Leibniz-Zentrum f\u00fcr Informatik, 16:1\u201316:29. https://doi.org/10.4230/LIPIcs.ECOOP.2022.16",
      "doi": ""
    },
    {
      "text": "Brian Hempel, Justin Lubin, and Ravi Chugh. 2019. Sketch-n-Sketch: Output-Directed Programming for SVG. In ACM Symposium on User Interface Software and Technology (UIST). 281\u2013292. https://doi.org/10.1145/3332165.3347925",
      "doi": "10.1145/3332165.3347925"
    },
    {
      "text": "Aspen\u00a0K Hopkins, Michael Correll, and Arvind Satyanarayan. 2020. VisuaLint: Sketchy in situ annotations of chart construction errors. In Computer Graphics Forum, Vol.\u00a039. Wiley Online Library, 219\u2013228.",
      "doi": ""
    },
    {
      "text": "Ruanqianqian\u00a0(Lisa) Huang, Kasra Ferdowsi, Ana Selvaraj, Adalbert\u00a0Gerald Soosai\u00a0Raj, and Sorin Lerner. 2022. Investigating the Impact of Using a Live Programming Environment in a CS1 Course. In ACM Technical Symposium on Computer Science Education (SIGCSE)(SIGCSE 2022). Association for Computing Machinery, 495\u2013501. https://doi.org/10.1145/3478431.3499305",
      "doi": "10.1145/3478431.3499305"
    },
    {
      "text": "Christopher\u00a0D Hundhausen, Sean\u00a0F Farley, and Jonathan\u00a0L Brown. 2009. Can Direct Manipulation Lower the Barriers to Computer Programming and Promote Transfer of Training? An Experimental Study. ACM Transactions on Computer-Human Interaction (TOCHI) 16, 3(2009), 1\u201340. https://doi.org/10.1145/1592440.1592442",
      "doi": "10.1145/1592440.1592442"
    },
    {
      "text": "Christopher\u00a0David Hundhausen, Daniel\u00a0M Olivares, and Adam\u00a0S Carter. 2017. IDE-Based Learning Analytics for Computing Education: A Process Model, Critical Review, and Research Agenda. ACM Transactions on Computing Education (TOCE) 17, 3 (2017), 1\u201326. https://doi.org/10.1145/3105759",
      "doi": "10.1145/3105759"
    },
    {
      "text": "hundredrabbits. 2021. Orca. https://github.com/hundredrabbits/Orca. Accessed 9/21/21.",
      "doi": ""
    },
    {
      "text": "Petri Ihantola, Arto Vihavainen, Alireza Ahadi, Matthew Butler, J\u00fcrgen B\u00f6rstler, Stephen\u00a0H Edwards, Essi Isohanni, Ari Korhonen, Andrew Petersen, Kelly Rivers, 2015. Educational Data Mining and Learning Analytics in Programming: Literature Review and Case Studies. Proceedings of the 2015 ITiCSE on Working Group Reports (2015), 41\u201363. https://doi.org/10.1145/2858796.2858798",
      "doi": "10.1145/2858796.2858798"
    },
    {
      "text": "jshint. 2021. JSHint. https://github.com/jshint/jshint. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Hyeonsu Kang and Philip\u00a0J Guo. 2017. Omnicode: A Novice-Oriented Live Programming Environment with Always-On Run-Time Value Visualizations. In ACM Symposium on User Interface Software and Technology (UIST). 737\u2013745. https://doi.org/10.1145/3126594.3126632",
      "doi": "10.1145/3126594.3126632"
    },
    {
      "text": "Mary\u00a0Beth Kery, Donghao Ren, Fred Hohman, Dominik Moritz, Kanit Wongsuphasawat, and Kayur Patel. 2020. mage: Fluid moves between code and graphical work in computational notebooks. In ACM Symposium on User Interface Software and Technology (UIST). 140\u2013151.",
      "doi": "10.1145/3379337.3415842"
    },
    {
      "text": "Amy\u00a0J Ko and Brad\u00a0A Myers. 2006. Barista: An implementation framework for enabling new tools, interaction techniques and views in code editors. In SIGCHI Conference on Human Factors in Computing Systems. 387\u2013396.",
      "doi": "10.1145/1124772.1124831"
    },
    {
      "text": "Jan-Peter Kramer, Joachim Kurz, Thorsten Karrer, and Jan Borchers. 2014. How Live Coding Affects Developers\u2019 Coding Behavior. In Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 5\u20138. https://doi.org/10.1109/VLHCC.2014.6883013",
      "doi": ""
    },
    {
      "text": "Golan Levin and Tega Brain. 2021. Code as Creative Medium: A Handbook for Computational Art and Design. MIT.",
      "doi": ""
    },
    {
      "text": "Jingyi Li, Sonia Hashim, and Jennifer Jacobs. 2021. What We Can Learn From Visual Artists About Software Development. In SIGCHI Conference on Human Factors in Computing Systems. 1\u201314. https://doi.org/10.1145/3411764.3445682",
      "doi": "10.1145/3411764.3445682"
    },
    {
      "text": "Zach Lieberman. 2020. openFrameworks. https://openframeworks.cc/ofBook/chapters/foreword.html. Accessed 9/21/21.",
      "doi": ""
    },
    {
      "text": "Justin Lubin and Ravi Chugh. 2020. Type-Directed Program Transformations for the Working Functional Programmer. In Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU 2019). Schloss Dagstuhl-Leibniz-Zentrum f\u00fcr Informatik.",
      "doi": ""
    },
    {
      "text": "Mihaela Malita and Ethel Schuster. 2020. From Drawing to Coding: Teaching Programming with Processing. Journal of Computing Sciences in Colleges 35, 8 (April 2020), 245\u2013246. https://doi.org/10.5555/3417639.3417663",
      "doi": "10.5555/3417639.3417663"
    },
    {
      "text": "Mariana M\u0103r\u0103\u0219oiu, Luke Church, and Alan Blackwell. 2015. An empirical investigation of code completion usage by professional software developers. In Psychology of Programming Interest Group (PPIG 2015). 59\u201368.",
      "doi": ""
    },
    {
      "text": "Guillaume Marceau, Kathi Fisler, and Shriram Krishnamurthi. 2011. Mind Your Language: on Novices\u2019 Interactions with Error Messages. In ACM Symposium on New Ideas in Programming and Reflections on Software, Onward! 2011, part of SPLASH \u201911. 3\u201318. https://doi.org/10.1145/2048237.2048241",
      "doi": "10.1145/2048237.2048241"
    },
    {
      "text": "Andrew McNutt, Gordon Kindlmann, and Michael Correll. 2020. Surfacing Visualization Mirages. In SIGCHI Conference on Human Factors in Computing Systems. 1\u201316.",
      "doi": ""
    },
    {
      "text": "Andrew\u00a0M. McNutt, Chenglong Wang, Rob DeLine, and Steven\u00a0M. Drucker. 2023. On the Design of AI-powered Code Assistants for Notebooks. In SIGCHI Conference on Human Factors in Computing Systems. To Appear.",
      "doi": ""
    },
    {
      "text": "Mark\u00a0C Mitchell and Oliver Bown. 2013. Towards a creativity support tool in processing: understanding the needs of creative coders. In Australian Computer-Human Interaction Conference: Augmentation, Application, Innovation, Collaboration. 143\u2013146.",
      "doi": "10.1145/2541016.2541096"
    },
    {
      "text": "Don Norman. 2013. The design of everyday things: Revised and expanded edition. Basic books.",
      "doi": ""
    },
    {
      "text": "Cyrus Omar, Ian Voysey, Ravi Chugh, and Matthew\u00a0A. Hammer. 2019. Live Functional Programming with Typed Holes. Proceedings of the ACM on Programming Languages (POPL) 3, Article 14(2019), 32\u00a0pages. https://doi.org/10.1145/3290327",
      "doi": "10.1145/3290327"
    },
    {
      "text": "Cyrus Omar, Ian Voysey, Michael Hilton, Jonathan Aldrich, and Matthew\u00a0A. Hammer. 2017. Hazelnut: A Bidirectionally Typed Structure Editor Calculus. In ACM SIGPLAN Symposium on Principles of Programming Languages (POPL). Association for Computing Machinery, 86\u201399. https://doi.org/10.1145/3009837.3009900",
      "doi": "10.1145/3009837.3009900"
    },
    {
      "text": "Cyrus Omar, Young\u00a0Seok Yoon, Thomas\u00a0D LaToza, and Brad\u00a0A Myers. 2012. Active Code Completion. In International Conference on Software Engineering (ICSE). IEEE, 859\u2013869. https://doi.org/10.1109/ICSE.2012.6227133",
      "doi": ""
    },
    {
      "text": "Sharon Oviatt, Alex Arthur, and Julia Cohen. 2006. Quiet interfaces that help students think. In ACM Symposium on User Interface Software and Technology (UIST). 191\u2013200.",
      "doi": "10.1145/1166253.1166284"
    },
    {
      "text": "Kylie Peppler and Yasmin Kafai. 2009. Creative Coding: Programming for Personal Expression. International Conference on Computer Supported Collaborative Learning (CSCL) 30(2009), 7.",
      "doi": ""
    },
    {
      "text": "Inigo Quilez and Pol Jeremias. 2013. ShaderToy. https://www.shadertoy.com/. Accessed 9/7/2022.",
      "doi": ""
    },
    {
      "text": "Olli Rautiainen. 2020. How to write better code with linting, formatting, and analysis tools. https://www.eficode.com/blog/how-to-write-better-code-with-tools. Accessed 4/4/2022.",
      "doi": ""
    },
    {
      "text": "Casey Reas and Ben Fry. 2007. Processing: a programming handbook for visual designers and artists. Mit Press.",
      "doi": ""
    },
    {
      "text": "Patrick Rein, Stefan Ramson, Jens Lincke, Robert Hirschfeld, and Tobias Pape. 2019. Exploratory and Live, Programming and Coding: A Literature Study Comparing Perspectives on Liveness. The Art, Science, and Engineering of Programming 3, 1(2019). Issue 1. https://doi.org/10.22152/programming-journal.org/2019/3/1",
      "doi": ""
    },
    {
      "text": "Replit. 2021. Replit. https://replit.com/. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Ana Selvaraj, Eda Zhang, Leo Porter, and Adalbert\u00a0Gerald Soosai\u00a0Raj. 2021. Live Coding: A Review of the Literature. In ACM Conference on Innovation and Technology in Computer Science Education, Vol.\u00a01. 164\u2013170. https://doi.org/10.1145/3430665.3456382",
      "doi": "10.1145/3430665.3456382"
    },
    {
      "text": "David\u00a0Williamson Shaffer and Mitchel Resnick. 1999. \u201cThick\u201d Authenticity: New Media and Authentic Learning. Journal of Interactive Learning Research 10, 2 (December 1999), 195\u2013215.",
      "doi": "10.5555/325370.325387"
    },
    {
      "text": "Daniel Shiffman. 2021. Coding Train. https://thecodingtrain.com/.",
      "doi": ""
    },
    {
      "text": "Ben Shneiderman. 2007. Creativity support tools: accelerating discovery and innovation. Commun. ACM 50, 12 (2007), 20\u201332.",
      "doi": "10.1145/1323688.1323689"
    },
    {
      "text": "Beth Simon, P\u00e4ivi Kinnunen, Leo Porter, and Dov Zazkis. 2010. Experience Report: CS1 for Majors with Media Computation. In Conference on Innovation and Technology in Computer Science Education (ITiCSE).",
      "doi": "10.1145/1822090.1822151"
    },
    {
      "text": "Blair Subbaraman and Nadya Peek. 2022. p5. fab: Direct Control of Digital Fabrication Machines from a Creative Coding Environment. In Designing Interactive Systems Conference. 1148\u20131161.",
      "doi": "10.1145/3532106.3533496"
    },
    {
      "text": "Steven\u00a0L. Tanimoto. 1990. VIVA: A Visual Language for Image Processing. Journal of Visual Languages and Computing 1, 2 (June 1990), 127\u2013139. https://doi.org/10.1016/S1045-926X(05)80012-6",
      "doi": "10.1016/S1045-926X%2805%2980012-6"
    },
    {
      "text": "Steven\u00a0L. Tanimoto. 2013. A perspective on the evolution of live programming. In Workshop on Live Programming, LIVE. IEEE, 31\u201334. https://doi.org/10.1109/LIVE.2013.6617346",
      "doi": ""
    },
    {
      "text": "Bret Victor. 2011. Explorable Explanations. http://worrydream.com/ExplorableExplanations/.",
      "doi": ""
    },
    {
      "text": "Bret Victor. 2011. Scrubbing Calculator. http://worrydream.com/ScrubbingCalculator/.",
      "doi": ""
    },
    {
      "text": "Arto Vihavainen, Juha Helminen, and Petri Ihantola. 2014. How Novices Tackle their First Lines of Code in an IDE: Analysis of Programming Session Traces. In Koli Calling International Conference on Computing Education Research. 109\u2013116. https://doi.org/10.1145/2674683.2674692",
      "doi": "10.1145/2674683.2674692"
    },
    {
      "text": "Nathalie Vladis, Aspen Hopkins, and Arvind Satyanarayan. 2020. Data Crafting: Exploring Data through Craft and Play. IEEE VIS Workshop on Data Vis Activities to Facilitate Learning, Reflecting, Discussing, and Designing.",
      "doi": ""
    },
    {
      "text": "David Weintrop and Uri Wilensky. 2015. To Block or Not to Block, That is the Question: Students\u2019 Perceptions of Blocks-Based Programming. In International Conference on Interaction Design and Children (IDC).",
      "doi": ""
    },
    {
      "text": "Brian Whitworth. 2005. Polite Computing. Behaviour & Information Technology 24, 5 (2005), 353\u2013363. https://doi.org/10.1080/01449290512331333700",
      "doi": ""
    },
    {
      "text": "Zoe\u00a0J Wood, Paul Muhl, and Katelyn Hicks. 2016. Computational Art: Introducing High School Students to Computing via Art. In ACM Technical Symposium on Computing Science Education. 261\u2013266. https://doi.org/10.1145/2839509.2844614",
      "doi": "10.1145/2839509.2844614"
    },
    {
      "text": "Kevin Workman. 2021. Happy Coding Tutorials. https://happycoding.io/. Accessed 4/3/2022.",
      "doi": ""
    },
    {
      "text": "Yifan Wu, Joseph\u00a0M. Hellerstein, and Arvind Satyanarayan. 2020. B2: Bridging Code and Interactive Visualization in Computational Notebooks. In ACM Symposium on User Interface Software and Technology (UIST). ACM, 152\u2013165. https://doi.org/10.1145/3379337.3415851",
      "doi": "10.1145/3379337.3415851"
    }
  ]
}
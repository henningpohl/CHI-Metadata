{
  "doi": "10.1145/3544548.3581525",
  "title": "Colaroid: A Literate Programming Approach for Authoring Explorable Multi-Stage Tutorials",
  "published": "2023-04-19",
  "proctitle": "CHI '23: Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-22",
  "year": 2023,
  "badges": [
    "Honorable Mention"
  ],
  "abstract": "Multi-stage programming tutorials are key learning resources for programmers, using progressive incremental steps to teach them how to build larger software systems. A good multi-stage tutorial describes the code clearly, explains the rationale and code changes for each step, and allows readers to experiment as they work through the tutorial. In practice, it is time-consuming for authors to create tutorials with these attributes. In this paper, we introduce Colaroid, an interactive authoring tool for creating high quality multi-stage tutorials. Colaroid tutorials are augmented computational notebooks, where snippets and outputs represent a snapshot of a project, with source code differences highlighted, complete source code context for each snippet, and the ability to load and tinker with any stage of the project in a linked IDE. In two laboratory studies, we found Colaroid makes it easy to create multi-stage tutorials, while offering advantages to readers compared to video and web-based tutorials.",
  "tags": [
    "programming",
    "computational notebooks",
    "tutorials",
    "instruction"
  ],
  "authors": [
    {
      "name": "April Yi Wang",
      "institution": "School of Information, University of Michigan, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659481726",
      "orcid": "0000-0001-8724-4662"
    },
    {
      "name": "Andrew Head",
      "institution": "Department of Computer and Information Science, University of Pennsylvania, United States",
      "img": "/do/10.1145/contrib-99658703835/rel-imgonly/img_13703.jpg",
      "acmid": "99658703835",
      "orcid": "0000-0002-1523-3347"
    },
    {
      "name": "Ashley Ge Zhang",
      "institution": "University of Michigan, Ann Arbor, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99660782585",
      "orcid": "0000-0001-5978-3714"
    },
    {
      "name": "Steve Oney",
      "institution": "School of Information, University of Michigan, United States",
      "img": "/do/10.1145/contrib-81453662914/rel-imgonly/81453662914.jpg",
      "acmid": "81453662914",
      "orcid": "0000-0002-5823-1499"
    },
    {
      "name": "Christopher Brooks",
      "institution": "School of Information, University of Michigan, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81100076780",
      "orcid": "0000-0003-0875-0204"
    }
  ],
  "references": [
    {
      "text": "2022. CodeTour. https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour",
      "doi": ""
    },
    {
      "text": "Lawrence Bergman, Vittorio Castelli, Tessa Lau, and Daniel Oblinger. 2005. DocWizards: a system for authoring follow-me documentation wizards. In Proceedings of the 18th annual ACM symposium on User interface software and technology. 191\u2013200.",
      "doi": "10.1145/1095034.1095067"
    },
    {
      "text": "Raymond\u00a0PL Buse and Westley\u00a0R Weimer. 2010. Automatically documenting program changes. In Proceedings of the IEEE/ACM international conference on Automated software engineering. 33\u201342.",
      "doi": "10.1145/1858996.1859005"
    },
    {
      "text": "Paul Cairns and Jeremy Gow. 2005. Literate proving: presenting and documenting formal proofs. In International Conference on Mathematical Knowledge Management. Springer, 159\u2013173.",
      "doi": ""
    },
    {
      "text": "Souti Chattopadhyay, Ishita Prasad, Austin\u00a0Z Henley, Anita Sarma, and Titus Barik. 2020. What\u2019s wrong with computational notebooks? Pain points, needs, and design opportunities. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3313831.3376729"
    },
    {
      "text": "Charles\u00a0H Chen and Philip\u00a0J Guo. 2019. Improv: Teaching programming at scale via live coding. In Proceedings of the Sixth (2019) ACM Conference on Learning@ Scale. 1\u201310.",
      "doi": "10.1145/3330430.3333627"
    },
    {
      "text": "Pei-Yu Chi, Sally Ahn, Amanda Ren, Mira Dontcheva, Wilmot Li, and Bj\u00f6rn Hartmann. 2012. MixT: automatic generation of step-by-step mixed media tutorials. In Proceedings of the 25th annual ACM symposium on User interface software and technology. 93\u2013102.",
      "doi": "10.1145/2380116.2380130"
    },
    {
      "text": "Fulvio Corno, Luigi De\u00a0Russis, and Juan\u00a0Pablo S\u00e1enz. 2019. Towards computational notebooks for IoT development. In Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems. 1\u20136.",
      "doi": "10.1145/3290607.3312963"
    },
    {
      "text": "Barth\u00e9l\u00e9my Dagenais and Martin\u00a0P Robillard. 2010. Creating and evolving developer documentation: understanding the decisions of open source contributors. In Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering. 127\u2013136.",
      "doi": "10.1145/1882291.1882312"
    },
    {
      "text": "Alan Davies, Frances Hooley, Peter Causey-Freeman, Iliada Eleftheriou, and Georgina Moulton. 2020. Using interactive digital notebooks for bioscience and informatics education. PLoS computational biology 16, 11 (2020), e1008326.",
      "doi": ""
    },
    {
      "text": "Eve 2020. Eve: Programming designed for humans. http://witheve.com/",
      "doi": ""
    },
    {
      "text": "Travis Faas, Lynn Dombrowski, Alyson Young, and Andrew\u00a0D Miller. 2018. Watch me code: Programming mentorship communities on twitch. tv. Proceedings of the ACM on Human-Computer Interaction 2, CSCW(2018), 1\u201318.",
      "doi": "10.1145/3274319"
    },
    {
      "text": "Shiry Ginosar, Luis\u00a0Fernando De\u00a0Pombo, Maneesh Agrawala, and Bjorn Hartmann. 2013. Authoring multi-stage code examples with editable code histories. In Proceedings of the 26th annual ACM symposium on User interface software and technology. 485\u2013494.",
      "doi": "10.1145/2501988.2502053"
    },
    {
      "text": "Mitchell Gordon and Philip\u00a0J Guo. 2015. Codepourri: Creating visual coding tutorials using a volunteer crowd of learners. In 2015 IEEE symposium on visual languages and human-centric computing (VL/HCC). IEEE, 13\u201321.",
      "doi": ""
    },
    {
      "text": "Floraine Grabler, Maneesh Agrawala, Wilmot Li, Mira Dontcheva, and Takeo Igarashi. 2009. Generating photo manipulation tutorials by demonstration. In ACM SIGGRAPH 2009 papers. 1\u20139.",
      "doi": "10.1145/1576246.1531372"
    },
    {
      "text": "Tovi Grossman, Justin Matejka, and George Fitzmaurice. 2010. Chronicle: capture, exploration, and playback of document workflow histories. In Proceedings of the 23nd annual ACM symposium on User interface software and technology. 143\u2013152.",
      "doi": "10.1145/1866029.1866054"
    },
    {
      "text": "Andrew Head, Elena\u00a0L Glassman, Bj\u00f6rn Hartmann, and Marti\u00a0A Hearst. 2018. Interactive extraction of examples from existing code. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3173574.3173659"
    },
    {
      "text": "Andrew Head, Fred Hohman, Titus Barik, Steven\u00a0M Drucker, and Robert DeLine. 2019. Managing messes in computational notebooks. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3290605.3300500"
    },
    {
      "text": "Andrew Head, Jason Jiang, James Smith, Marti\u00a0A Hearst, and Bj\u00f6rn Hartmann. 2020. Composing flexibly-organized step-by-step tutorials from linked source code, snippets, and outputs. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3313831.3376798"
    },
    {
      "text": "Fred Hohman, Kanit Wongsuphasawat, Mary\u00a0Beth Kery, and Kayur Patel. 2020. Understanding and visualizing data iteration in machine learning. In Proceedings of the 2020 CHI conference on human factors in computing systems. 1\u201313.",
      "doi": "10.1145/3313831.3376177"
    },
    {
      "text": "Mike Horn, Amartya Banerjee, and Matthew Brucker. 2022. TunePad Playbooks: Designing Computational Notebooks for Creative Music Coding. In CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3491102.3502021"
    },
    {
      "text": "Mary\u00a0Beth Kery, Bonnie\u00a0E John, Patrick O\u2019Flaherty, Amber Horvath, and Brad\u00a0A Myers. 2019. Towards effective foraging by data scientists to find past analysis choices. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems. 1\u201313.",
      "doi": "10.1145/3290605.3300322"
    },
    {
      "text": "Mary\u00a0Beth Kery, Marissa Radensky, Mahima Arya, Bonnie\u00a0E John, and Brad\u00a0A Myers. 2018. The story in the notebook: Exploratory data science using a literate programming tool. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems. 1\u201311.",
      "doi": "10.1145/3173574.3173748"
    },
    {
      "text": "Ada\u00a0S Kim and Amy\u00a0J Ko. 2017. A pedagogical analysis of online coding tutorials. In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education. 321\u2013326.",
      "doi": "10.1145/3017680.3017728"
    },
    {
      "text": "Youngtaek Kim, Jaeyoung Kim, Hyeon Jeon, Young-Ho Kim, Hyunjoo Song, Bohyoung Kim, and Jinwook Seo. 2020. Githru: visual analytics for understanding software development history through git metadata analysis. IEEE Transactions on Visualization and Computer Graphics 27, 2(2020), 656\u2013666.",
      "doi": ""
    },
    {
      "text": "Donald\u00a0Ervin Knuth. 1984. Literate programming. The computer journal 27, 2 (1984), 97\u2013111.",
      "doi": ""
    },
    {
      "text": "Kenneth\u00a0R Koedinger, Elizabeth\u00a0A McLaughlin, Julianna\u00a0Zhuxin Jia, and Norman\u00a0L Bier. 2016. Is the doer effect a causal relationship? How can we tell and why it\u2019s important. In Proceedings of the sixth international conference on learning analytics & knowledge. 388\u2013397.",
      "doi": "10.1145/2883851.2883957"
    },
    {
      "text": "Rebecca Krosnick, Fraser Anderson, Justin Matejka, Steve Oney, Walter S.\u00a0Lasecki, Tovi Grossman, and George Fitzmaurice. 2021. Think-Aloud Computing: Supporting Rich and Low-Effort Knowledge Capture. In Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems. 1\u201313.",
      "doi": "10.1145/3411764.3445066"
    },
    {
      "text": "Sean Kross and Philip\u00a0J Guo. 2019. Practitioners teaching data science in industry and academia: Expectations, workflows, and challenges. In Proceedings of the 2019 CHI conference on human factors in computing systems. 1\u201314.",
      "doi": "10.1145/3290605.3300493"
    },
    {
      "text": "Mario Linares-V\u00e1squez, Luis\u00a0Fernando Cort\u00e9s-Coy, Jairo Aponte, and Denys Poshyvanyk. 2015. Changescribe: A tool for automatically generating commit messages. In 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol.\u00a02. IEEE, 709\u2013712.",
      "doi": ""
    },
    {
      "text": "Mark Mahoney. 2018. Storyteller: a tool for creating worked examples. Journal of Computing Sciences in Colleges 34, 1 (2018), 137\u2013144.",
      "doi": "10.5555/3280489.3280511"
    },
    {
      "text": "Brad\u00a0A Myers. 1991. Separating application code from toolkits: Eliminating the spaghetti of call-backs. In Proceedings of the 4th annual ACM symposium on User interface software and technology. 211\u2013220.",
      "doi": "10.1145/120782.120805"
    },
    {
      "text": "Alok Mysore and Philip\u00a0J Guo. 2017. Torta: Generating mixed-media gui and command-line app tutorials using operating-system-wide activity tracing. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology. 703\u2013714.",
      "doi": "10.1145/3126594.3126628"
    },
    {
      "text": "Seyed\u00a0Mehdi Nasehi, Jonathan Sillito, Frank Maurer, and Chris Burns. 2012. What makes a good code example?: A study of programming Q&A in StackOverflow. In 2012 28th IEEE International Conference on Software Maintenance (ICSM). IEEE, 25\u201334.",
      "doi": "10.1109/ICSM.2012.6405249"
    },
    {
      "text": "Observable 2020. Observable: the magic notebook for exploring data and thinking with code.https://observablehq.com/",
      "doi": ""
    },
    {
      "text": "Steve Oney, Christopher Brooks, and Paul Resnick. 2018. Creating guided code explanations with chat. codes. Proceedings of the ACM on Human-Computer Interaction 2, CSCW(2018), 1\u201320.",
      "doi": "10.1145/3274400"
    },
    {
      "text": "Chris Parnin, Christoph Treude, and Margaret-Anne Storey. 2013. Blogging developer knowledge: Motivations, challenges, and future directions. In 2013 21st International Conference on Program Comprehension (ICPC). IEEE, 211\u2013214.",
      "doi": ""
    },
    {
      "text": "Jeffrey\u00a0M Perkel. 2018. Why Jupyter is data scientists\u2019 computational notebook of choice. Nature 563, 7732 (2018), 145\u2013147.",
      "doi": ""
    },
    {
      "text": "Cl\u00e9ment Pit-Claudel. 2020. Untangling mechanized proofs. In Proceedings of the 13th ACM SIGPLAN International Conference on Software Language Engineering. 155\u2013174.",
      "doi": "10.1145/3426425.3426940"
    },
    {
      "text": "Suporn Pongnumkul, Mira Dontcheva, Wilmot Li, Jue Wang, Lubomir Bourdev, Shai Avidan, and Michael\u00a0F Cohen. 2011. Pause-and-play: automatically linking screencast video tutorials with applications. In Proceedings of the 24th annual ACM symposium on User interface software and technology. 135\u2013144.",
      "doi": "10.1145/2047196.2047213"
    },
    {
      "text": "Roman R\u00e4dle, Midas Nouwens, Kristian Antonsen, James\u00a0R Eagan, and Clemens\u00a0N Klokmose. 2017. Codestrates: Literate computing with webstrates. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology. 715\u2013725.",
      "doi": "10.1145/3126594.3126642"
    },
    {
      "text": "Ernst\u00a0Z Rothkopf and MJ Billington. 1979. Goal-guided learning from text: inferring a descriptive processing model from inspection times and eye movements.Journal of educational psychology 71, 3 (1979), 310.",
      "doi": ""
    },
    {
      "text": "Adam\u00a0Carl Rule. 2018. Design and use of computational notebooks. University of California, San Diego.",
      "doi": ""
    },
    {
      "text": "Huascar Sanchez, Jim Whitehead, and Martin Sch\u00e4f. 2016. Multistaging to understand: Distilling the essence of java code examples. In 2016 IEEE 24th International Conference on Program Comprehension (ICPC). IEEE, 1\u201310.",
      "doi": ""
    },
    {
      "text": "Anselm Strauss and Juliet Corbin. 1994. Grounded theory methodology: An overview.(1994).",
      "doi": ""
    },
    {
      "text": "Brad Victor. 2011. Explorable Explanations. (2011). http://worrydream.com/ExplorableExplanations/",
      "doi": ""
    },
    {
      "text": "April\u00a0Yi Wang, Will Epperson, Robert\u00a0A DeLine, and Steven\u00a0M Drucker. 2022. Diff in the Loop: Supporting Data Comparison in Exploratory Data Analysis. In CHI Conference on Human Factors in Computing Systems. 1\u201310.",
      "doi": ""
    },
    {
      "text": "April\u00a0Yi Wang, Anant Mittal, Christopher Brooks, and Steve Oney. 2019. How data scientists use computational notebooks for real-time collaboration. Proceedings of the ACM on Human-Computer Interaction 3, CSCW(2019), 1\u201330.",
      "doi": "10.1145/3359141"
    },
    {
      "text": "April\u00a0Yi Wang, Zihan Wu, Christopher Brooks, and Steve Oney. 2020. Callisto: Capturing the\" Why\" by Connecting Conversations with Computational Narratives. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems. 1\u201313.",
      "doi": "10.1145/3313831.3376740"
    },
    {
      "text": "Nathaniel Weinman, Steven\u00a0M Drucker, Titus Barik, and Robert DeLine. 2021. Fork It: Supporting stateful alternatives in computational notebooks. In Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems. 1\u201312.",
      "doi": "10.1145/3411764.3445527"
    },
    {
      "text": "Wikipedia contributors. 2022. Instant camera \u2014 Wikipedia, The Free Encyclopedia. https://en.wikipedia.org/w/index.php?title=Instant_camera&oldid=1109305997 [Online; accessed 15-September-2022].",
      "doi": ""
    },
    {
      "text": "Stephen Wolfram. 2003. The mathematica book. Vol.\u00a01. Wolfram Research, Inc.",
      "doi": ""
    },
    {
      "text": "Yihui Xie. 2018. knitr: a comprehensive tool for reproducible research in R. In Implementing reproducible research. Chapman and Hall/CRC, 3\u201331.",
      "doi": ""
    },
    {
      "text": "Tom Yeh, Tsung-Hsiang Chang, and Robert\u00a0C Miller. 2009. Sikuli: using GUI screenshots for search and automation. In Proceedings of the 22nd annual ACM symposium on User interface software and technology. 183\u2013192.",
      "doi": "10.1145/1622176.1622213"
    }
  ]
}
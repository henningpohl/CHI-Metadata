{
  "doi": "10.1145/3544548.3581403",
  "title": "Log-it: Supporting Programming with Interactive, Contextual, Structured, and Visual Logs",
  "published": "2023-04-19",
  "proctitle": "CHI '23: Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-16",
  "year": 2023,
  "badges": [],
  "abstract": "Logging is a widely used technique for inspecting and understanding programs. However, the presentation of logs still often takes its ancient form of a linear stream of text that resides in a terminal, console, or log file. Despite its simplicity, interpreting log output is often challenging due to the large number of textual logs that lack structure and context. We conducted content analysis and expert interviews to understand the practices and challenges inherent in logging. These activities demonstrated that the current representation of logs does not provide the rich structures programmers need to interpret them or the program\u2019s behavior. We present Log-it, a logging interface that enables programmers to interactively structure and visualize logs in situ. A user study with novices and experts showed that Log-it\u2019s syntax and interface have a minimal learning curve, and the interactive representations and organizations of logs help programmers easily locate, synthesize, and understand logs.",
  "authors": [
    {
      "name": "Peiling Jiang",
      "institution": "Department of Cognitive Science and Design Lab, University of California San Diego, United States",
      "img": "/do/10.1145/contrib-99660629926/rel-imgonly/jpl.png",
      "acmid": "99660629926",
      "orcid": "0000-0003-4447-0111"
    },
    {
      "name": "Fuling Sun",
      "institution": "Department of Cognitive Science and Design Lab, University of California San Diego, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99660781955",
      "orcid": "0000-0003-0453-0757"
    },
    {
      "name": "Haijun Xia",
      "institution": "Department of Cognitive Science and Design Lab, University of California San Diego, United States",
      "img": "/do/10.1145/contrib-99658640651/rel-imgonly/haijun_xia_acm.jpg",
      "acmid": "99658640651",
      "orcid": "0000-0002-9425-0881"
    }
  ],
  "references": [
    {
      "text": "Saba Alimadadi, Sheldon Sequeira, Ali Mesbah, and Karthik Pattabiraman. 2014. Understanding JavaScript Event-Based Interactions. In Proceedings of the 36th International Conference on Software Engineering (Hyderabad, India) (ICSE 2014). Association for Computing Machinery, New York, NY, USA, 367\u2013377. https://doi.org/10.1145/2568225.2568268",
      "doi": "10.1145/2568225.2568268"
    },
    {
      "text": "Andrea Arcuri and Xin Yao. 2008. A novel co-evolutionary approach to automatic software bug fixing. In 2008 IEEE Congress on Evolutionary Computation (IEEE World Congress on Computational Intelligence). IEEE, IEEE, 162\u2013168. https://doi.org/10.1109/CEC.2008.4630793",
      "doi": ""
    },
    {
      "text": "Mikhail Auguston, Clinton Jeffery, and Scott Underwood. 2002. A framework for automatic debugging. In Proceedings 17th IEEE International Conference on Automated Software Engineering,. IEEE, IEEE, 217\u2013222. https://doi.org/10.1109/ASE.2002.1115015",
      "doi": ""
    },
    {
      "text": "Ivan Beschastnikh, Yuriy Brun, Sigurd Schneider, Michael Sloan, and Michael\u00a0D. Ernst. 2011. Leveraging Existing Instrumentation to Automatically Infer Invariant-Constrained Models. In Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering(Szeged, Hungary) (ESEC/FSE \u201911). Association for Computing Machinery, New York, NY, USA, 267\u2013277. https://doi.org/10.1145/2025113.2025151",
      "doi": "10.1145/2025113.2025151"
    },
    {
      "text": "Virginia Braun and Victoria Clarke. 2012. Thematic analysis.American Psychological Association.",
      "doi": ""
    },
    {
      "text": "Brian Burg, Richard Bailey, Amy\u00a0J. Ko, and Michael\u00a0D. Ernst. 2013. Interactive Record/Replay for Web Application Debugging. In Proceedings of the 26th Annual ACM Symposium on User Interface Software and Technology (St. Andrews, Scotland, United Kingdom) (UIST \u201913). Association for Computing Machinery, New York, NY, USA, 473\u2013484. https://doi.org/10.1145/2501988.2502050",
      "doi": "10.1145/2501988.2502050"
    },
    {
      "text": "Brian Burg, Amy\u00a0J. Ko, and Michael\u00a0D. Ernst. 2015. Explaining Visual Changes in Web Interfaces. In Proceedings of the 28th Annual ACM Symposium on User Interface Software and Technology (Charlotte, NC, USA) (UIST \u201915). Association for Computing Machinery, New York, NY, USA, 259\u2013268. https://doi.org/10.1145/2807442.2807473",
      "doi": "10.1145/2807442.2807473"
    },
    {
      "text": "Boyuan Chen and Zhen\u00a0Ming Jiang. 2017. Characterizing and Detecting Anti-Patterns in the Logging Code. In 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE). IEEE, 71\u201381. https://doi.org/10.1109/ICSE.2017.15",
      "doi": "10.1109/ICSE.2017.15"
    },
    {
      "text": "Boyuan Chen and Zhen Ming\u00a0(Jack) Jiang. 2021. A Survey of Software Log Instrumentation. ACM Comput. Surv. 54, 4, Article 90 (may 2021), 34\u00a0pages. https://doi.org/10.1145/3448976",
      "doi": "10.1145/3448976"
    },
    {
      "text": "Marcello Cinque, Domenico Cotroneo, and Antonio Pecchia. 2012. Event logs for the analysis of software failures: A rule-based approach. IEEE Transactions on Software Engineering 39, 6 (2012), 806\u2013821.",
      "doi": "10.1109/TSE.2012.67"
    },
    {
      "text": "Brian Clark. 2017. Debugging in Node.js. https://www.clarkio.com/2017/04/25/debugging-in-nodejs/#debugging-progression",
      "doi": ""
    },
    {
      "text": "Simon\u00a0P. Davies. 1993. Models and Theories of Programming Strategy. Int. J. Man-Mach. Stud. 39, 2 (aug 1993), 237\u2013267. https://doi.org/10.1006/imms.1993.1061",
      "doi": "10.1006/imms.1993.1061"
    },
    {
      "text": "Adam Fouse, Nadir Weibel, Edwin Hutchins, and James\u00a0D. Hollan. 2011. ChronoViz: A System for Supporting Navigation of Time-Coded Data. In CHI \u201911 Extended Abstracts on Human Factors in Computing Systems (Vancouver, BC, Canada) (CHI EA \u201911). Association for Computing Machinery, New York, NY, USA, 299\u2013304. https://doi.org/10.1145/1979742.1979706",
      "doi": "10.1145/1979742.1979706"
    },
    {
      "text": "Qiang Fu, Jieming Zhu, Wenlu Hu, Jian-Guang Lou, Rui Ding, Qingwei Lin, Dongmei Zhang, and Tao Xie. 2014. Where Do Developers Log? An Empirical Study on Logging Practices in Industry. In Companion Proceedings of the 36th International Conference on Software Engineering(Hyderabad, India) (ICSE Companion 2014). Association for Computing Machinery, New York, NY, USA, 24\u201333. https://doi.org/10.1145/2591062.2591175",
      "doi": "10.1145/2591062.2591175"
    },
    {
      "text": "Sina Gholamian and Paul A.\u00a0S. Ward. 2021. A Comprehensive Survey of Logging in Software: From Logging Statements Automation to Log Mining and Analysis. CoRR abs/2110.12489(2021). arXiv:2110.12489https://arxiv.org/abs/2110.12489",
      "doi": ""
    },
    {
      "text": "David\u00a0J. Gilmore. 1991. Models of debugging. Acta Psychologica 78, 1 (1991), 151\u2013172. https://doi.org/10.1016/0001-6918(91)90009-O",
      "doi": ""
    },
    {
      "text": "Elena\u00a0L. Glassman, Jeremy Scott, Rishabh Singh, Philip\u00a0J. Guo, and Robert\u00a0C. Miller. 2015. OverCode: Visualizing Variation in Student Solutions to Programming Problems at Scale. ACM Trans. Comput.-Hum. Interact. 22, 2, Article 7 (mar 2015), 35\u00a0pages. https://doi.org/10.1145/2699751",
      "doi": "10.1145/2699751"
    },
    {
      "text": "Elena\u00a0L. Glassman, Tianyi Zhang, Bj\u00f6rn Hartmann, and Miryung Kim. 2018. Visualizing API Usage Examples at Scale. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems (Montreal QC, Canada) (CHI \u201918). Association for Computing Machinery, New York, NY, USA, 1\u201312. https://doi.org/10.1145/3173574.3174154",
      "doi": "10.1145/3173574.3174154"
    },
    {
      "text": "Philip Guo. 2021. Ten Million Users and Ten Years Later: Python Tutor\u2019s Design Guidelines for Building Scalable and Sustainable Research Software in Academia. In The 34th Annual ACM Symposium on User Interface Software and Technology (Virtual Event, USA) (UIST \u201921). Association for Computing Machinery, New York, NY, USA, 1235\u20131251. https://doi.org/10.1145/3472749.3474819",
      "doi": "10.1145/3472749.3474819"
    },
    {
      "text": "Philip\u00a0J. Guo. 2013. Online Python Tutor: Embeddable Web-Based Program Visualization for Cs Education. In Proceeding of the 44th ACM Technical Symposium on Computer Science Education (Denver, Colorado, USA) (SIGCSE \u201913). Association for Computing Machinery, New York, NY, USA, 579\u2013584. https://doi.org/10.1145/2445196.2445368",
      "doi": "10.1145/2445196.2445368"
    },
    {
      "text": "Joshua Hibschman, Darren Gergle, Eleanor O\u2019Rourke, and Haoqi Zhang. 2019. Isopleth: Supporting Sensemaking of Professional Web Applications to Create Readily Available Learning Experiences. ACM Trans. Comput.-Hum. Interact. 26, 3, Article 16 (apr 2019), 42\u00a0pages. https://doi.org/10.1145/3310274",
      "doi": "10.1145/3310274"
    },
    {
      "text": "Joshua Hibschman and Haoqi Zhang. 2016. Telescope: Fine-Tuned Discovery of Interactive Web UI Feature Implementation. In Proceedings of the 29th Annual Symposium on User Interface Software and Technology (Tokyo, Japan) (UIST \u201916). Association for Computing Machinery, New York, NY, USA, 233\u2013245. https://doi.org/10.1145/2984511.2984570",
      "doi": "10.1145/2984511.2984570"
    },
    {
      "text": "Jeisson Hidalgo-C\u00e9spedes, Gabriela Mar\u00edn-Ravent\u00f3s, and Vladimir Lara-Villagr\u00e1n. 2016. Learning principles in program visualizations: a systematic literature review. In 2016 IEEE frontiers in education conference (FIE). IEEE, IEEE, 1\u20139. https://doi.org/10.1109/FIE.2016.7757692",
      "doi": "10.1109/FIE.2016.7757692"
    },
    {
      "text": "CHRISTOPHER\u00a0D. HUNDHAUSEN, SARAH\u00a0A. DOUGLAS, and JOHN\u00a0T. STASKO. 2002. A Meta-Study of Algorithm Visualization Effectiveness. Journal of Visual Languages & Computing 13, 3 (2002), 259\u2013290. https://doi.org/10.1006/jvlc.2002.0237",
      "doi": ""
    },
    {
      "text": "Hyeonsu Kang and Philip\u00a0J. Guo. 2017. Omnicode: A Novice-Oriented Live Programming Environment with Always-On Run-Time Value Visualizations. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology (Qu\u00e9bec City, QC, Canada) (UIST \u201917). Association for Computing Machinery, New York, NY, USA, 737\u2013745. https://doi.org/10.1145/3126594.3126632",
      "doi": "10.1145/3126594.3126632"
    },
    {
      "text": "Jun Kato, Sean McDirmid, and Xiang Cao. 2012. DejaVu: Integrated Support for Developing Interactive Camera-Based Programs. In Proceedings of the 25th Annual ACM Symposium on User Interface Software and Technology(Cambridge, Massachusetts, USA) (UIST \u201912). Association for Computing Machinery, New York, NY, USA, 189\u2013196. https://doi.org/10.1145/2380116.2380142",
      "doi": "10.1145/2380116.2380142"
    },
    {
      "text": "B.W. Kernighan and R. Pike. 1999. The Practice of Programming. Addison-Wesley. https://books.google.com/books?id=to6M9_dbjosC",
      "doi": ""
    },
    {
      "text": "Taeyoung Kim, Suntae Kim, Sooyong Park, and YoungBeom Park. 2020. Automatic recommendation to appropriate log levels. Software: Practice and Experience 50, 3 (2020), 189\u2013209. https://doi.org/10.1002/spe.2771 arXiv:https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2771",
      "doi": ""
    },
    {
      "text": "Amy\u00a0J. Ko and Brad\u00a0A. Myers. 2004. Designing the Whyline: A Debugging Interface for Asking Questions about Program Behavior. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (Vienna, Austria) (CHI \u201904). Association for Computing Machinery, New York, NY, USA, 151\u2013158. https://doi.org/10.1145/985692.985712",
      "doi": "10.1145/985692.985712"
    },
    {
      "text": "Amy\u00a0J. Ko and Brad\u00a0A. Myers. 2008. Debugging Reinvented: Asking and Answering Why and Why Not Questions about Program Behavior. In Proceedings of the 30th International Conference on Software Engineering (Leipzig, Germany) (ICSE \u201908). Association for Computing Machinery, New York, NY, USA, 301\u2013310. https://doi.org/10.1145/1368088.1368130",
      "doi": "10.1145/1368088.1368130"
    },
    {
      "text": "Amy\u00a0J Ko, Brad\u00a0A Myers, Michael\u00a0J Coblenz, and Htet\u00a0Htet Aung. 2006. An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks. IEEE Transactions on software engineering 32, 12 (2006), 971\u2013987. https://doi.org/10.1109/TSE.2006.116",
      "doi": "10.1109/TSE.2006.116"
    },
    {
      "text": "Thomas\u00a0D. LaToza and Brad\u00a0A. Myers. 2010. Developers Ask Reachability Questions. In Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 1 (Cape Town, South Africa) (ICSE \u201910). Association for Computing Machinery, New York, NY, USA, 185\u2013194. https://doi.org/10.1145/1806799.1806829",
      "doi": "10.1145/1806799.1806829"
    },
    {
      "text": "Thomas\u00a0D. LaToza and Brad\u00a0A. Myers. 2011. Visualizing call graphs. In 2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 117\u2013124. https://doi.org/10.1109/VLHCC.2011.6070388",
      "doi": ""
    },
    {
      "text": "Sorin Lerner. 2020. Projection Boxes: On-the-Fly Reconfigurable Visualization for Live Programming. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems (Honolulu, HI, USA) (CHI \u201920). Association for Computing Machinery, New York, NY, USA, 1\u20137. https://doi.org/10.1145/3313831.3376494",
      "doi": "10.1145/3313831.3376494"
    },
    {
      "text": "Bil Lewis. 2003. Debugging Backwards in Time. CoRR cs.SE/0310016(2003). http://arxiv.org/abs/cs/0310016",
      "doi": ""
    },
    {
      "text": "Heng Li, Weiyi Shang, and Ahmed\u00a0E Hassan. 2017. Which log level should developers choose for a new logging statement?Empirical Software Engineering 22, 4 (2017), 1684\u20131716.",
      "doi": ""
    },
    {
      "text": "Tao Li, Yexi Jiang, Chunqiu Zeng, Bin Xia, Zheng Liu, Wubai Zhou, Xiaolong Zhu, Wentao Wang, Liang Zhang, Jun Wu, Li Xue, and Dewei Bao. 2017. FLAP: An End-to-End Event Log Analysis Platform for System Management. In Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining(Halifax, NS, Canada) (KDD \u201917). Association for Computing Machinery, New York, NY, USA, 1547\u20131556. https://doi.org/10.1145/3097983.3098022",
      "doi": "10.1145/3097983.3098022"
    },
    {
      "text": "Tom Lieber, Joel\u00a0R. Brandt, and Rob\u00a0C. Miller. 2014. Addressing Misconceptions about Code with Always-on Programming Visualizations. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (Toronto, Ontario, Canada) (CHI \u201914). Association for Computing Machinery, New York, NY, USA, 2481\u20132490. https://doi.org/10.1145/2556288.2557409",
      "doi": "10.1145/2556288.2557409"
    },
    {
      "text": "Zhongxin Liu, Xin Xia, David Lo, Zhenchang Xing, Ahmed\u00a0E. Hassan, and Shanping Li. 2021. Which Variables Should I Log?IEEE Transactions on Software Engineering 47, 9 (2021), 2012\u20132031. https://doi.org/10.1109/TSE.2019.2941943",
      "doi": ""
    },
    {
      "text": "Mark Marron. 2018. Log++ Logging for a Cloud-Native World. In Proceedings of the 14th ACM SIGPLAN International Symposium on Dynamic Languages (Boston, MA, USA) (DLS 2018). Association for Computing Machinery, New York, NY, USA, 25\u201336. https://doi.org/10.1145/3276945.3276952",
      "doi": "10.1145/3276945.3276952"
    },
    {
      "text": "Ren\u00e9e McCauley, Sue Fitzgerald, Gary Lewandowski, Laurie Murphy, Beth Simon, Lynda Thomas, and Carol Zander. 2008. Debugging: a review of the literature from an educational perspective. Computer Science Education 18, 2 (2008), 67\u201392. https://doi.org/10.1080/08993400802114581 arXiv:https://doi.org/10.1080/08993400802114581",
      "doi": ""
    },
    {
      "text": "Will McGrath, Daniel Drew, Jeremy Warner, Majeed Kazemitabaar, Mitchell Karchemsky, David Mellis, and Bj\u00f6rn Hartmann. 2017. Bifr\u00f6St: Visualizing and Checking Behavior of Embedded Systems across Hardware and Software. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology (Qu\u00e9bec City, QC, Canada) (UIST \u201917). Association for Computing Machinery, New York, NY, USA, 299\u2013310. https://doi.org/10.1145/3126594.3126658",
      "doi": "10.1145/3126594.3126658"
    },
    {
      "text": "William McGrath, Jeremy Warner, Mitchell Karchemsky, Andrew Head, Daniel Drew, and Bjoern Hartmann. 2018. WiFr\u00f6St: Bridging the Information Gap for Debugging of Networked Embedded Systems. In Proceedings of the 31st Annual ACM Symposium on User Interface Software and Technology (Berlin, Germany) (UIST \u201918). Association for Computing Machinery, New York, NY, USA, 447\u2013455. https://doi.org/10.1145/3242587.3242668",
      "doi": "10.1145/3242587.3242668"
    },
    {
      "text": "George\u00a0A. Miller. 1956. The magical number seven plus or minus two: some limits on our capacity for processing information.Psychological review 63 2 (1956), 81\u201397.",
      "doi": ""
    },
    {
      "text": "Robert\u00a0S Moyer and Richard\u00a0H Bayer. 1976. Mental comparison and the symbolic distance effect. Cognitive Psychology 8, 2 (1976), 228\u2013246.",
      "doi": ""
    },
    {
      "text": "Deokgun Park, Steven\u00a0M. Drucker, Roland Fernandez, and Niklas Elmqvist. 2018. Atom: A Grammar for Unit Visualizations. IEEE Transactions on Visualization and Computer Graphics 24, 12(2018), 3032\u20133043. https://doi.org/10.1109/TVCG.2017.2785807",
      "doi": ""
    },
    {
      "text": "Strategic Planning. 2002. The economic impacts of inadequate infrastructure for software testing. National Institute of Standards and Technology (2002), 1.",
      "doi": ""
    },
    {
      "text": "Nicolas Poggi, Vinod Muthusamy, David Carrera, and Rania Khalaf. 2013. Business process mining from e-commerce web logs. In Business process management. Springer, 65\u201380.",
      "doi": ""
    },
    {
      "text": "Guillaume Pothier and \u00c9ric Tanter. 2009. Back to the Future: Omniscient Debugging. IEEE Softw. 26, 6 (nov 2009), 78\u201385. https://doi.org/10.1109/MS.2009.169",
      "doi": "10.1109/MS.2009.169"
    },
    {
      "text": "Vineet Sinha, David Karger, and Rob Miller. 2005. Relo: Helping Users Manage Context during Interactive Exploratory Visualization of Large Codebases. In Proceedings of the 2005 OOPSLA Workshop on Eclipse Technology EXchange (San Diego, California) (eclipse \u201905). Association for Computing Machinery, New York, NY, USA, 21\u201325. https://doi.org/10.1145/1117696.1117701",
      "doi": "10.1145/1117696.1117701"
    },
    {
      "text": "Replay Solutions. 2022. Replay.io. https://www.replay.io/",
      "doi": ""
    },
    {
      "text": "Juha Sorva, Ville Karavirta, and Lauri Malmi. 2013. A Review of Generic Program Visualization Systems for Introductory Programming Education. ACM Trans. Comput. Educ. 13, 4, Article 15 (nov 2013), 64\u00a0pages. https://doi.org/10.1145/2490822",
      "doi": "10.1145/2490822"
    },
    {
      "text": "Richard Stallman, Roland Pesch, Stan Shebs, 1988. Debugging with GDB. Free Software Foundation 675 (1988).",
      "doi": ""
    },
    {
      "text": "Mat\u00fa\u0161 Sul\u00edr, Michaela Ba\u010d\u00edkov\u00e1, Sergej Chodarev, and Jaroslav Porub\u00e4n. 2018. Visual augmentation of source code editors: A systematic mapping study. Journal of Visual Languages & Computing 49 (2018), 46\u201359. https://doi.org/10.1016/j.jvlc.2018.10.001",
      "doi": ""
    },
    {
      "text": "Tetsuji Takada and Takaaki Abe. 2018. Emoji-Nized Log Browser: Visualization of Server-Logs by Emoji for System Administrators. In Proceedings of the 2018 International Conference on Advanced Visual Interfaces (Castiglione della Pescaia, Grosseto, Italy) (AVI \u201918). Association for Computing Machinery, New York, NY, USA, Article 86, 3\u00a0pages. https://doi.org/10.1145/3206505.3206578",
      "doi": "10.1145/3206505.3206578"
    },
    {
      "text": "T. Takada and H. Koike. 2002. Tudumi: information visualization system for monitoring and auditing computer logs. In Proceedings Sixth International Conference on Information Visualisation. IEEE, 570\u2013576. https://doi.org/10.1109/IV.2002.1028831",
      "doi": ""
    },
    {
      "text": "Holly\u00a0A Taylor and Barbara Tversky. 1996. Perspective in spatial descriptions. Journal of memory and language 35, 3 (1996), 371\u2013391.",
      "doi": ""
    },
    {
      "text": "Frank Tip. 1994. A Survey of Program Slicing Techniques.Technical Report. NLD.",
      "doi": ""
    },
    {
      "text": "Barbara Tversky. 2001. Spatial schemas in depictions. In Spatial schemas and abstract thought, Vol.\u00a079. 111.",
      "doi": ""
    },
    {
      "text": "Bret Victor. 2012. Learnable Programming. worrydream.com (2012). http://worrydream.com/LearnableProgramming/",
      "doi": ""
    },
    {
      "text": "Bret Victor. 2013. Drawing dynamic visualizations. worrydream.com (2013). http://worrydream.com/DrawingDynamicVisualizations/",
      "doi": ""
    },
    {
      "text": "Anneliese von Mayrhauser and A.\u00a0Marie Vans. 1997. Program Understanding Behavior during Debugging of Large Scale Software. In Papers Presented at the Seventh Workshop on Empirical Studies of Programmers (Alexandria, Virginia, USA) (ESP \u201997). Association for Computing Machinery, New York, NY, USA, 157\u2013179. https://doi.org/10.1145/266399.266414",
      "doi": "10.1145/266399.266414"
    },
    {
      "text": "Haijun Xia, Nathalie Henry\u00a0Riche, Fanny Chevalier, Bruno De\u00a0Araujo, and Daniel Wigdor. 2018. DataInk: Direct and Creative Data-Oriented Drawing. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems (Montreal QC, Canada) (CHI \u201918). Association for Computing Machinery, New York, NY, USA, 1\u201313. https://doi.org/10.1145/3173574.3173797",
      "doi": "10.1145/3173574.3173797"
    },
    {
      "text": "Baowen Xu, Ju Qian, Xiaofang Zhang, Zhongqiang Wu, and Lin Chen. 2005. A Brief Survey of Program Slicing. SIGSOFT Softw. Eng. Notes 30, 2 (mar 2005), 1\u201336. https://doi.org/10.1145/1050849.1050865",
      "doi": "10.1145/1050849.1050865"
    },
    {
      "text": "Litao Yan, Elena\u00a0L. Glassman, and Tianyi Zhang. 2021. Visualizing Examples of Deep Neural Networks at Scale. In Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems (Yokohama, Japan) (CHI \u201921). Association for Computing Machinery, New York, NY, USA, Article 313, 14\u00a0pages. https://doi.org/10.1145/3411764.3445654",
      "doi": "10.1145/3411764.3445654"
    },
    {
      "text": "Geoffrey\u00a0X. Yu, Tovi Grossman, and Gennady Pekhimenko. 2020. Skyline: Interactive In-Editor Computational Performance Profiling for Deep Neural Network Training. In Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology (Virtual Event, USA) (UIST \u201920). Association for Computing Machinery, New York, NY, USA, 126\u2013139. https://doi.org/10.1145/3379337.3415890",
      "doi": "10.1145/3379337.3415890"
    },
    {
      "text": "Xiuming Yu, Meijing Li, Incheon Paik, and Keun\u00a0Ho Ryu. 2012. Prediction of web user behavior by discovering temporal relational rules from web log data. In International Conference on Database and Expert Systems Applications. Springer, 31\u201338.",
      "doi": ""
    },
    {
      "text": "Ding Yuan, Soyeon Park, Peng Huang, Yang Liu, Michael\u00a0M. Lee, Xiaoming Tang, Yuanyuan Zhou, and Stefan Savage. 2012. Be Conservative: Enhancing Failure Diagnosis with Proactive Logging. In Proceedings of the 10th USENIX Conference on Operating Systems Design and Implementation(Hollywood, CA, USA) (OSDI\u201912). USENIX Association, USA, 293\u2013306. https://www.usenix.org/conference/osdi12/technical-sessions/presentation/yuan",
      "doi": ""
    },
    {
      "text": "Ding Yuan, Soyeon Park, and Yuanyuan Zhou. 2012. Characterizing logging practices in open-source software. In 2012 34th International Conference on Software Engineering (ICSE). 102\u2013112. https://doi.org/10.1109/ICSE.2012.6227202",
      "doi": ""
    },
    {
      "text": "Ding Yuan, Jing Zheng, Soyeon Park, Yuanyuan Zhou, and Stefan Savage. 2011. Improving Software Diagnosability via Log Enhancement. In Proceedings of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems (Newport Beach, California, USA) (ASPLOS XVI). Association for Computing Machinery, New York, NY, USA, 3\u201314. https://doi.org/10.1145/1950365.1950369",
      "doi": "10.1145/1950365.1950369"
    },
    {
      "text": "Andreas Zeller. 2002. Isolating Cause-Effect Chains from Computer Programs. In Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering (Charleston, South Carolina, USA) (SIGSOFT \u201902/FSE-10). Association for Computing Machinery, New York, NY, USA, 1\u201310. https://doi.org/10.1145/587051.587053",
      "doi": "10.1145/587051.587053"
    },
    {
      "text": "Andreas Zeller. 2009. Why programs fail: a guide to systematic debugging. Elsevier.",
      "doi": "10.5555/1077048"
    },
    {
      "text": "Jieming Zhu, Pinjia He, Qiang Fu, Hongyu Zhang, Michael\u00a0R. Lyu, and Dongmei Zhang. 2015. Learning to Log: Helping Developers Make Informed Logging Decisions. In Proceedings of the 37th International Conference on Software Engineering - Volume 1 (Florence, Italy) (ICSE \u201915). IEEE Press, 415\u2013425. https://doi.org/10.1109/ICSE.2015.60",
      "doi": ""
    }
  ]
}
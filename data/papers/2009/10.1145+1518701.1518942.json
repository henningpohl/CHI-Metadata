{
  "doi": "10.1145/1518701.1518942",
  "title": "Finding causes of program output with the Java Whyline",
  "published": "2009-04-04",
  "proctitle": "CHI '09: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
  "pages": "1569-1578",
  "year": 2009,
  "badges": [],
  "abstract": "Debugging and diagnostic tools are some of the most important software development tools, but most expect developers choose the right code to inspect. Unfortunately, this rarely occurs. A new tool called the Whyline is described which avoids such speculation by allowing developers to select questions about a program's output. The tool then helps developers work backwards from output to its causes. The prototype, which supports Java programs, was evaluated in an experiment in which participants investigated two real bug reports from an open source project using either the Whyline or a breakpoint debugger. Whyline users were successful about three times as often and about twice as fast compared to the control group, and were extremely positive about the tool's ability to simplify diagnostic tasks in software development work.",
  "authors": [
    {
      "name": "Amy J. Ko",
      "institution": "University of Washington, Seattle, WA, USA",
      "img": "/do/10.1145/contrib-81100500360/rel-imgonly/2021-02.jpg",
      "acmid": "81100500360",
      "orcid": "missing"
    },
    {
      "name": "Brad A. Myers",
      "institution": "Carnegie Mellon University, Pittsburgh, PA, USA",
      "img": "/do/10.1145/contrib-81100013136/rel-imgonly/brad-myers-120x120.jpg",
      "acmid": "81100013136",
      "orcid": "0000-0002-4769-0219"
    }
  ],
  "references": [
    {
      "text": "Abraham R., and Erwig M. 2005. Goal-directed debugging of spreadsheets. Visual Languages and Human-Centric Computing, 37--44.  ",
      "doi": "10.1109/VLHCC.2005.42"
    },
    {
      "text": "Baowen X., Ju Q., Xiaofang Z., Zhongqiang W.,&amp;Lin C. 2005. A brief survey of program slicing, Software Engr. Notes, 30(2), 1--36.  ",
      "doi": "10.1145/1050849.1050865"
    },
    {
      "text": "Bothell D. 2004. ACT-R Environment Manual, Version 5.0, http://act-r.psy.cmu.edu/software/EnvironmentManual.pdf.",
      "doi": ""
    },
    {
      "text": "Chalupsky H. and Russ T.A. 2002. WhyNot: Debugging failed queries in large knowledge bases. Nat'l Conf. on Artificial Intelligence, 870--877. ",
      "doi": "10.5555/777092.777224"
    },
    {
      "text": "Clark P., Chaw SY, Barker K, Chaudhri V, Harrison P, Fan J, John B, Porter B, Spaulding A, Thompson J,&amp;Yeh PZ 2007. Capturing and answering questions posed to a knowledge-based system. Int'l Conf. on Knowledge Capture, 63--70.  ",
      "doi": "10.1145/1298406.1298419"
    },
    {
      "text": "Ernst M.D., Czeisler A., Griswold W.G.,&amp;Notkin D. 2000. Quickly detecting relevant program invariants. Int'l Conf. on Soft. Engr., 449--458.  ",
      "doi": "10.1145/337180.337240"
    },
    {
      "text": "Gilmore D.J. 1992. Models of debugging, Acta Psychologica, 78, 151--173.",
      "doi": ""
    },
    {
      "text": "Ko A.J.&amp;Myers B.A. 2004. Designing the Whyline: a debugging interface for asking questions about program failures. ACM Conf. on Human Factors in Computing Systems, 151--158.  ",
      "doi": "10.1145/985692.985712"
    },
    {
      "text": "Ko A.J., Myers B.A., Coblenz M.&amp;Aung H.H. 2006. An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks. IEEE Trans. on Soft. Engr., 32(12), 971--987.  ",
      "doi": "10.1109/TSE.2006.116"
    },
    {
      "text": "Ko A.J., Myers B.A., Chau D.H. 2006. A linguistic analysis of how people describe software problems. Visual Languages and Human-Centric Computing, 127--134.  ",
      "doi": "10.1109/VLHCC.2006.3"
    },
    {
      "text": "Ko A.J. DeLine R.,&amp;Venolia G. 2007. Information needs in collocated software development teams. Int'l Conf. on Soft. Engr., 344--353.  ",
      "doi": "10.1109/ICSE.2007.45"
    },
    {
      "text": "Ko A.J. 2008. Asking and answering questions about the causes of software behaviors. Human-Computer Interaction Institute CMU-CS-08-122.",
      "doi": ""
    },
    {
      "text": "Ko A.J.&amp;Myers B.A. 2008. Debugging reinvented: asking and answering why and why not questions about program behavior. Int'l Conf. on Soft. Engr., 301--310.  ",
      "doi": "10.1145/1368088.1368130"
    },
    {
      "text": "LaToza T.D., Garlan D., Herblseb J.D.&amp;Myers B.A. 2007.\u00a0\u00a0Program comprehension as fact finding. Foundations of Soft. Engr., 361--370.  ",
      "doi": "10.1145/1287624.1287675"
    },
    {
      "text": "Lewis B. 2003. Debugging backwards in time, Int'l Workshop on Automated Debugging, 225--235.",
      "doi": ""
    },
    {
      "text": "Myers B.A., Weitzman D., Ko A.J.,&amp;Chau D. H. 2006. Answering why and why not questions in user interfaces. ACM Conf. on Human Factors in Computing Systems, 397--406.  ",
      "doi": "10.1145/1124772.1124832"
    },
    {
      "text": "Robillard M.P., Coelho W.,&amp;Murphy G.C. 2004. How effective developers investigate source code: An exploratory study, IEEE Transactions on Soft. Engr., 30(12), 889--903.  ",
      "doi": "10.1109/TSE.2004.101"
    },
    {
      "text": "Sillito J., Murphy G.C.,&amp;De Volder K. 2006. Questions programmers ask during software evolution tasks. Foundations on Soft. Engr., 23--34.  ",
      "doi": "10.1145/1181775.1181779"
    },
    {
      "text": "Tassey G. 2002. The economic impacts of inadequate infrastructure for software testing. National Institute of Standards and Technology, RTI Project Number 7007.011.",
      "doi": ""
    },
    {
      "text": "Wagner E.&amp;Lieberman H. 2003. An end-user tool for e-commerce debugging. Int'l Conf. on Intelligent User Interfaces, 331--331.  ",
      "doi": "10.1145/604045.604124"
    },
    {
      "text": "Weiser M. 1982. Programmers use slices when debugging, Comm. of the ACM, 25(7), 446--452.  ",
      "doi": "10.1145/358557.358577"
    },
    {
      "text": "Zeller A. 2002. Isolating cause-effect chains from computer programs. Foundations of Soft. Engr., 1--10.  ",
      "doi": "10.1145/587051.587053"
    }
  ]
}
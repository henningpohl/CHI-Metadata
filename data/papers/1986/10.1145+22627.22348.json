{
  "doi": "10.1145/22627.22348",
  "title": "Design principles for the enhanced presentation of computer program source text",
  "published": "1986-04-01",
  "proctitle": "CHI '86: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
  "pages": "51-58",
  "year": 1986,
  "badges": [],
  "abstract": "In order to make computer programs more readable, understandable, appealing, memorable, and maintainable, the presentation of program source text needs to be enhanced over its conventional treatment. Towards this end, we present five basic design principles for enhanced program visualization and a framework for applying these principles to particular programming languages. The framework deals comprehensively with ten fundamental areas that are central to the structure of programming languages. We then use the principles and the framework to develop a novel design for the effective presentation of source text in the C programming language.",
  "authors": [
    {
      "name": "Ronald M. Baecker",
      "institution": "Dynamic Graphics Project, Computer Systems Research Institute and Department of Computer Science, University of Toronto, Toronto, Ontario M5S 1A4 Canada",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81100448368",
      "orcid": "missing"
    },
    {
      "name": "Aaron Marcus",
      "institution": "Aaron Marcus and Associates, 1196 Euclid Avenue, Berkeley, California",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81100583778",
      "orcid": "missing"
    }
  ],
  "references": [
    {
      "text": "Baecker, R. (1975). Two systems which produce animated representations of the execution of computer programs. 81GCSE Bulletin, 7 (I), February 1975, 158-167.  ",
      "doi": "10.1145/953064.811152"
    },
    {
      "text": "Baecker, R. &amp; Sherman, D. (1981). Sorting Out Sorting, 30 minute colour sound film, Dynamic Graphics Project, Computer Systems Research Institute, University of Toronto, 1981. (Excerpted in SIGGRAPH Vict~eo Review 7, 1983.)",
      "doi": ""
    },
    {
      "text": "Baecker, R. &amp; Marcus, A. (1983). On enhancing the interface to the source code of computer programs. Proc. Human Factors in Computing Systems (SIGCHI '83), Boston, December 1983, 251-255.  ",
      "doi": "10.1145/800045.801621"
    },
    {
      "text": "Baecker, R., Marcus, A., Arent, M., Longarini, J., Macintosh, A., and Tiros, T. (1985) Enhancing the Presentation of Computer Program Source Text, Final Report of the Program Visualization Project to the Defense Advanced Research Projects Agency, submitted by Human Computing Resources Corporation and Aaron Marcus and Associates, 6 volumes, 1985.",
      "doi": ""
    },
    {
      "text": "Brown, M.H. &amp; Sedgewick, R. (1984). A system for algorithm animation. Computer Graphics, 18 (3), 1984, 177- 186.  ",
      "doi": "10.1145/964965.808596"
    },
    {
      "text": "Grogono, P. (1979). On layout, identifiers and semicolons in pascal programs. SIGPLAIV Notices, 14 (4), 35-40.  ",
      "doi": "10.1145/988078.988084"
    },
    {
      "text": "Gustafson, G.G. (1979). Some practical experiences formatting pascal programs. SIGPLAN Notices, 14 (9), 42-49.  ",
      "doi": "10.1145/988113.988118"
    },
    {
      "text": "Harbison, S.P. &amp; Steele, Jr., G.L. (1984). C: A reference manual. Prentice-Hall, Inc. ",
      "doi": "10.5555/19322"
    },
    {
      "text": "Hueras, J. &amp; Ledgard, H. (1977). An automatic formatting program for pascal. SIGPLAN Notices, 12 (7), 82-84.  ",
      "doi": "10.1145/954639.954645"
    },
    {
      "text": "Johnson, S.C. (1979). A tour through the Portable C Compiler. UNIX Programmer's Manual Volume 2.",
      "doi": ""
    },
    {
      "text": "Kernighan, B. &amp; Ritchie, D. (1978). The C programming language. Prentice-Hall, Inc. ",
      "doi": "10.5555/7519"
    },
    {
      "text": "Kernighan, B. (1982). A typesetter-independent TROFF. Bell Laboratories Computing Science Series Technical Report No. 97, March 1982.",
      "doi": ""
    },
    {
      "text": "Leinbaugh, D. (1980). Indenting for the compiler. SIGPLAN Notices, 15 (5), 41-48.  ",
      "doi": "10.1145/947639.947644"
    },
    {
      "text": "Marcus, A; &amp; Baecker, R. (1982). On the graphic design of program text. Proceedings of Graphics Interface 82, 302- 311.",
      "doi": ""
    },
    {
      "text": "Martin, J. &amp; McClure, C. (1985). Diagramming techniques for analysts and programmers. Englewood Cliffs, NJ: Prentice-Hall, Inc. ",
      "doi": "10.5555/2220"
    },
    {
      "text": "Miara, R.J., Musselman, J.A., Navarro, J.A. &amp; Schneiderman, B. (1983). Program indentation and comprehensibility. Comm. of the ACbL 26 (11), 861-867.  ",
      "doi": "10.1145/182.358437"
    },
    {
      "text": "Oppen, D.D. (1980). Prettyprinting. ACM Transactions on Programming Languages and Systems, 2 (4), 465-483.  ",
      "doi": "10.1145/357114.357115"
    },
    {
      "text": "Rose, G.A. &amp; Welsh, J. (1981). Formatted programming languages. Software -- Practice and Experience, 11, 651- 669.",
      "doi": ""
    },
    {
      "text": "Rubin, L. (1983). Syntax-directed pretty printing-- A first step towards a syntax-directed editor. IEEE Transactions on Software Engineering, 9 (2), 119-127.",
      "doi": "10.1109/TSE.1983.236456"
    }
  ]
}
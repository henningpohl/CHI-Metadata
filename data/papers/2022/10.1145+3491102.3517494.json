{
  "doi": "10.1145/3491102.3517494",
  "title": "i-LaTeX : Manipulating Transitional Representations between LaTeX Code and Generated Documents",
  "published": "2022-04-29",
  "proctitle": "CHI '22: Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-16",
  "year": 2022,
  "badges": [],
  "abstract": "Document description languages such as LaTeX are used extensively to author scientific and technical documents, but editing them is cumbersome: code-based editors only provide generic features, while WYSIWYG interfaces only support a subset of the language. Our interviews with 11 LaTeX users highlighted their difficulties dealing with textually-encoded abstractions and with the mappings between source code and document output. To address some of these issues, we introduce Transitional Representations for document description languages, which enable the visualisation and manipulation of fragments of code in relation to their generated output. We present i-LaTeX, a LaTeX editor equipped with Transitional Representations of formulae, tables, images, and grid layouts. A 16-participant experiment shows that Transitional Representations let them complete common editing tasks significantly faster, with fewer compilations, and with a lower workload. We discuss how Transitional Representations affect editing strategies and conclude with directions for future work.",
  "tags": [
    "Code editor",
    "document",
    "Transitional Representation"
  ],
  "authors": [
    {
      "name": "Camille Gobert",
      "institution": "LISN, Universit\u00e9 Paris-Saclay, CNRS, Inria, France",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659349245",
      "orcid": "missing"
    },
    {
      "name": "Michel Beaudouin-Lafon",
      "institution": "LISN, Universit\u00e9 Paris-Saclay, CNRS, Inria, France",
      "img": "/do/10.1145/contrib-81100644686/rel-imgonly/mbl-120x120.jpg",
      "acmid": "81100644686",
      "orcid": "0000-0002-2905-9810"
    }
  ],
  "references": [
    {
      "text": "Dimitar Asenov, Otmar Hilliges, and Peter M\u00fcller. 2016. The Effect of Richer Visualizations on Code Comprehension. In Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems. ACM, 5040\u20135045. https://doi.org/10.1145/2858036.2858372",
      "doi": "10.1145/2858036.2858372"
    },
    {
      "text": "Dimitar Asenov and Peter Muller. 2014. Envision: A Fast and Flexible Visual Code Editor with Fluid Interactions (Overview). In 2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 9\u201312. https://doi.org/10.1109/VLHCC.2014.6883014",
      "doi": ""
    },
    {
      "text": "Gideon Avrahami, Kenneth\u00a0P. Brooks, and Marc\u00a0H. Brown. 1989. A Two-View Approach to Constructing User Interfaces. ACM SIGGRAPH Computer Graphics 23, 3 (1989), 137\u2013146. https://doi.org/10.1145/74334.74347",
      "doi": "10.1145/74334.74347"
    },
    {
      "text": "David Bau, Jeff Gray, Caitlin Kelleher, Josh Sheldon, and Franklyn Turbak. 2017. Learnable Programming: Blocks and Beyond. Commun. ACM 60, 6 (2017), 72\u201380. https://doi.org/10.1145/3015455",
      "doi": "10.1145/3015455"
    },
    {
      "text": "Michel Beaudouin-Lafon and Wendy\u00a0E. Mackay. 2000. Reification, Polymorphism and Reuse: Three Principles for Designing Visual Interfaces. In Proceedings of the Working Conference on Advanced Visual Interfaces(AVI \u201900). Association for Computing Machinery, 102\u2013109. https://doi.org/10.1145/345513.345267",
      "doi": "10.1145/345513.345267"
    },
    {
      "text": "Virginia Braun and Victoria Clarke. 2019. Reflecting on Reflexive Thematic Analysis. Qualitative Research in Sport, Exercise and Health 11, 4 (2019), 589\u2013597. https://doi.org/10.1080/2159676X.2019.1628806",
      "doi": ""
    },
    {
      "text": "Ravi Chugh, Brian Hempel, Mitchell Spradlin, and Jacob Albers. 2016. Programmatic and Direct Manipulation, Together at Last. Proceedings of the 37th Conference on Programming Language Design and Implementation - PLDI 2016(2016), 341\u2013354. https://doi.org/10.1145/2908080.2908103 arxiv:1507.02988",
      "doi": "10.1145/2908080.2908103"
    },
    {
      "text": "Matthew Conlen and Jeffrey Heer. 2018. Idyll: A Markup Language for Authoring and Publishing Interactive Articles on the Web. In Proceedings of the 31st Symposium on User Interface Software and Technology - UIST \u201918. ACM, 977\u2013989. https://doi.org/10.1145/3242587.3242600",
      "doi": "10.1145/3242587.3242600"
    },
    {
      "text": "Pierre Dragicevic, St\u00e9phane Huot, and Fanny Chevalier. 2011. Gliimpse: Animating from Markup Code to Rendered Documents and Vice Versa. In Proceedings of the 24th Symposium on User Interface Software and Technology - UIST \u201911. ACM, 257\u2013262. https://doi.org/10.1145/2047196.2047229",
      "doi": "10.1145/2047196.2047229"
    },
    {
      "text": "Pierre Dragicevic, Yvonne Jansen, Abhraneel Sarma, Matthew Kay, and Fanny Chevalier. 2019. Increasing the Transparency of Research Papers with Explorable Multiverse Analyses. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems - CHI \u201919. ACM, 1\u201315. https://doi.org/10.1145/3290605.3300295",
      "doi": "10.1145/3290605.3300295"
    },
    {
      "text": "Ian Drosos, Titus Barik, Philip\u00a0J. Guo, Robert DeLine, and Sumit Gulwani. 2020. Wrex: A Unified Programming-by-Example Interaction for Synthesizing Readable Code for Data Scientists. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems - CHI\u201920. ACM, 1\u201312. https://doi.org/10.1145/3313831.3376442",
      "doi": "10.1145/3313831.3376442"
    },
    {
      "text": "Kevin Ellis, Daniel Ritchie, Armando Solar-Lezama, and Joshua\u00a0B. Tenenbaum. 2018. Learning to Infer Graphics Programs from Hand-Drawn Images. arXiv:1707.09627 [cs](2018). arxiv:1707.09627\u00a0[cs]",
      "doi": ""
    },
    {
      "text": "Sebastian\u00a0Thore Erdweg and Klaus Ostermann. 2011. Featherweight TeX and Parser Correctness. In Software Language Engineering(Lecture Notes in Computer Science), Brian Malloy, Steffen Staab, and Mark van den Brand (Eds.). Springer, 397\u2013416. https://doi.org/10.1007/978-3-642-19440-5_26",
      "doi": ""
    },
    {
      "text": "M. Erwig and B. Meyer. 1995. Heterogeneous Visual Languages-Integrating Visual and Textual Programming. In 1995 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE Comput. Soc. Press, 318\u2013325. https://doi.org/10.1109/VL.1995.520825",
      "doi": ""
    },
    {
      "text": "Bjarke\u00a0Vognstrup Fog and Clemens\u00a0Nylandsted Klokmose. 2019. Mapping the Landscape of Literate Computing. (2019), 10.",
      "doi": ""
    },
    {
      "text": "Adele Goldberg and David Robson. 1983. Smalltalk-80: The Language and Its Implementation. Addison-Wesley.",
      "doi": "10.5555/273"
    },
    {
      "text": "Keith Hanna. 2002. Interactive Visual Functional Programming. In Proceedings of the 7th International Conference on Functional Programming - ICFP \u201902. ACM, 145\u2013156. https://doi.org/10.1145/581478.581493",
      "doi": "10.1145/581478.581493"
    },
    {
      "text": "Sandra\u00a0G. Hart. 2006. Nasa-Task Load Index (NASA-TLX); 20 Years Later. Proceedings of the Human Factors and Ergonomics Society Annual Meeting 50, 9(2006), 904\u2013908. https://doi.org/10.1177/154193120605000909",
      "doi": ""
    },
    {
      "text": "Andrew Head, Kyle Lo, Dongyeop Kang, Raymond Fok, Sam Skjonsberg, Daniel\u00a0S. Weld, and Marti\u00a0A. Hearst. 2021. Augmenting Scientific Papers with Just-in-Time, Position-Sensitive Definitions of Terms and Symbols. In Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems. ACM, 1\u201318. https://doi.org/10.1145/3411764.3445648",
      "doi": "10.1145/3411764.3445648"
    },
    {
      "text": "Brian Hempel, Justin Lubin, and Ravi Chugh. 2019. Sketch-n-Sketch: Output-Directed Programming for SVG. In Proceedings of the 32nd Symposium on User Interface Software and Technology - UIST\u201919. ACM, 281\u2013292. https://doi.org/10.1145/3332165.3347925",
      "doi": "10.1145/3332165.3347925"
    },
    {
      "text": "Jane Hoffswell, Arvind Satyanarayan, and Jeffrey Heer. 2018. Augmenting Code with In Situ Visualizations to Aid Program Understanding. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems - CHI \u201918. ACM, 1\u201312. https://doi.org/10.1145/3173574.3174106",
      "doi": "10.1145/3173574.3174106"
    },
    {
      "text": "Hyeonsu Kang and Philip\u00a0J. Guo. 2017. Omnicode: A Novice-Oriented Live Programming Environment with Always-On Run-Time Value Visualizations. In Proceedings of the 30th Symposium on User Interface Software and Technology - UIST\u201917. ACM, 737\u2013745. https://doi.org/10.1145/3126594.3126632",
      "doi": "10.1145/3126594.3126632"
    },
    {
      "text": "Mary\u00a0Beth Kery, Donghao Ren, Fred Hohman, Dominik Moritz, Kanit Wongsuphasawat, and Kayur Patel. 2020. Mage: Fluid Moves Between Code and Graphical Work in Computational Notebooks. In Proceedings of the 33rd Symposium on User Interface Software and Technology - UIST\u201920. ACM, 140\u2013151. https://doi.org/10.1145/3379337.3415842",
      "doi": "10.1145/3379337.3415842"
    },
    {
      "text": "Markus Knauff and Jelica Nejasmic. 2014. An Efficiency Comparison of Document Preparation Systems Used in Academic Research and Development. PLOS ONE 9, 12 (2014), 1\u201312. https://doi.org/10.1371/journal.pone.0115069",
      "doi": ""
    },
    {
      "text": "Donald\u00a0Ervin Knuth. 1984. Literate Programming. Comput. J. 27, 2 (1984), 97\u2013111. https://doi.org/10.1093/comjnl/27.2.97",
      "doi": "10.1093/comjnl/27.2.97"
    },
    {
      "text": "Donald\u00a0Ervin Knuth. 1984. The TeXbook. Addison-Wesley.",
      "doi": ""
    },
    {
      "text": "Amy\u00a0J. Ko and Brad\u00a0A. Myers. 2006. Barista: An Implementation Framework for Enabling New Tools, Interaction Techniques and Views in Code Editors. In Proceedings of the 2006 CHI Conference on Human Factors in Computing Systems - CHI \u201906. ACM, 387\u2013396. https://doi.org/10.1145/1124772.1124831",
      "doi": "10.1145/1124772.1124831"
    },
    {
      "text": "Michael K\u00f6lling, Neil Brown, and Amjad Altadmri. 2017. Frame-Based Editing. Journal of Visual Languages and Sentient Systems 3, 1 (2017), 40\u201367. https://doi.org/10.18293/VLSS2017-009",
      "doi": ""
    },
    {
      "text": "Leslie Lamport. 1994. LaTeX: A Document Preparation System: User\u2019s Guide and Reference Manual. Addison-Wesley.",
      "doi": ""
    },
    {
      "text": "J\u00e9r\u00f4me Laurens. 2007. Will TeX Ever Be WYSIWYG or the PDF Synchronization Story. The PracTeX Journal 3, 3 (2007), 8.",
      "doi": ""
    },
    {
      "text": "J\u00e9r\u00f4me Laurens. 2008. Direct and Reverse Synchronization with SyncTeX. TUGBoat 29, 3 (2008), 365\u2013371.",
      "doi": ""
    },
    {
      "text": "Sorin Lerner. 2020. Projection Boxes: On-the-Fly Reconfigurable Visualization for Live Programming. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems - CHI\u201920. ACM, 1\u20137. https://doi.org/10.1145/3313831.3376494",
      "doi": "10.1145/3313831.3376494"
    },
    {
      "text": "Tom Lieber, Joel\u00a0R. Brandt, and Rob\u00a0C. Miller. 2014. Addressing Misconceptions about Code with Always-on Programming Visualizations. In Proceedings of the 2014 ACM Conference on Human Factors in Computing Systems - CHI \u201914. ACM, 2481\u20132490. https://doi.org/10.1145/2556288.2557409",
      "doi": "10.1145/2556288.2557409"
    },
    {
      "text": "Damien Masson, Sylvain Malacria, Edward Lank, and G\u00e9ry Casiez. 2020. Chameleon: Bringing Interactivity to Static Digital Documents. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems - CHI\u201920. ACM, 1\u201313. https://doi.org/10.1145/3313831.3376559",
      "doi": "10.1145/3313831.3376559"
    },
    {
      "text": "Mika\u00ebl Mayer, Viktor Kuncak, and Ravi Chugh. 2018. Bidirectional Evaluation with Direct Manipulation. Proceedings of the ACM on Programming Languages 2, OOPSLA(2018), 1\u201328. https://doi.org/10.1145/3276497",
      "doi": "10.1145/3276497"
    },
    {
      "text": "Brad\u00a0A. Myers. 1990. Taxonomies of Visual Programming and Program Visualization. Journal of Visual Languages and Computing 1, 1 (1990), 97\u2013123. https://doi.org/10.1016/S1045-926X(05)80036-9",
      "doi": "10.1016/S1045-926X%2805%2980036-9"
    },
    {
      "text": "Cyrus Omar, David Moon, Andrew Blinn, Ian Voysey, Nick Collins, and Ravi Chugh. 2021. Filling Typed Holes with Live GUIs. In Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation. ACM, 511\u2013525. https://doi.org/10.1145/3453483.3454059",
      "doi": "10.1145/3453483.3454059"
    },
    {
      "text": "Cyrus Omar, Young\u00a0Seok Yoon, Thomas\u00a0D. LaToza, and Brad\u00a0A. Myers. 2012. Active Code Completion. In Proceedings of the 34th International Conference on Software Engineering - ICSE\u201912. IEEE, 859\u2013869. https://doi.org/10.1109/ICSE.2012.6227133",
      "doi": "10.5555/2337223.2337324"
    },
    {
      "text": "Stephen Oney and Joel Brandt. 2012. Codelets: Linking Interactive Documentation and Example Code in the Editor. In Proceedings of the 2012 CHI Conference on Human Factors in Computing Systems - CHI \u201912. ACM, 2697. https://doi.org/10.1145/2207676.2208664",
      "doi": "10.1145/2207676.2208664"
    },
    {
      "text": "Jibin Ou, Martin Vechev, and Otmar Hilliges. 2015. An Interactive System for Data Structure Development. In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems. ACM, 3053\u20133062. https://doi.org/10.1145/2702123.2702319",
      "doi": "10.1145/2702123.2702319"
    },
    {
      "text": "Cl\u00e9ment Pit-Claudel. 2020. Untangling Mechanized Proofs. In Proceedings of the 13th ACM SIGPLAN International Conference on Software Language Engineering. ACM, 155\u2013174. https://doi.org/10/ghs5sn",
      "doi": "10.1145/3426425.3426940"
    },
    {
      "text": "Patrick Rein, Stefan Ramson, Jens Lincke, Robert Hirschfeld, and Tobias Pape. 2018. Exploratory and Live, Programming and Coding: A Literature Study Comparing Perspectives on Liveness. The Art, Science, and Engineering of Programming 3, 1(2018), 1. https://doi.org/10.22152/programming-journal.org/2019/3/1",
      "doi": ""
    },
    {
      "text": "Paulo Reis, John\u00a0D Lees-Miller, and Sven Laqua. 2021. Merging SaaS Products In A User-Centered Way \u2014 A Case Study of Overleaf and ShareLaTeX. In Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. ACM, 1\u20138. https://doi.org/10.1145/3411763.3443455",
      "doi": "10.1145/3411763.3443455"
    },
    {
      "text": "Mitchel Resnick, John Maloney, Andr\u00e9s Monroy-Hern\u00e1ndez, Natalie Rusk, Evelyn Eastmond, Karen Brennan, Amon Millner, Eric Rosenbaum, Jay Silver, Brian Silverman, and Yasmin Kafai. 2009. Scratch: Programming for All. Commun. ACM 52, 11 (2009), 60\u201367. https://doi.org/10.1145/1592761.1592779",
      "doi": "10.1145/1592761.1592779"
    },
    {
      "text": "Hugo Romat, Emmanuel Pietriga, Nathalie Henry-Riche, Ken Hinckley, and Caroline Appert. 2019. SpaceInk: Making Space for In-Context Annotations. In Proceedings of the 32nd Annual ACM Symposium on User Interface Software and Technology(UIST \u201919). Association for Computing Machinery, 871\u2013882. https://doi.org/10.1145/3332165.3347934",
      "doi": "10.1145/3332165.3347934"
    },
    {
      "text": "Tim Teitelbaum and Thomas Reps. 1981. The Cornell Program Synthesizer: A Syntax-Directed Programming Environment. Commun. ACM 24, 9 (1981), 563\u2013573. https://doi.org/10.1145/358746.358755",
      "doi": "10.1145/358746.358755"
    },
    {
      "text": "David Weintrop and Nathan Holbert. 2017. From Blocks to Text and Back: Programming Patterns in a Dual-Modality Environment. In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education. ACM, 633\u2013638. https://doi.org/10.1145/3017680.3017707",
      "doi": "10.1145/3017680.3017707"
    },
    {
      "text": "Jack Williams and Andrew\u00a0D. Gordon. 2021. Where-Provenance for Bidirectional Editing in Spreadsheets. In 2021 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). 1\u201310. https://doi.org/10.1109/VL/HCC51201.2021.9576272",
      "doi": ""
    },
    {
      "text": "Yifan Wu, Joseph\u00a0M. Hellerstein, and Arvind Satyanarayan. 2020. B2: Bridging Code and Interactive Visualization in Computational Notebooks. In Proceedings of the 33rd Symposium on User Interface Software and Technology - UIST\u201920. ACM, 152\u2013165. https://doi.org/10.1145/3379337.3415851",
      "doi": "10.1145/3379337.3415851"
    },
    {
      "text": "Bo Xiong, Haoqi Fan, Kristen Grauman, and Christoph Feichtenhofer. 2021. Multiview Pseudo-Labeling for Semi-Supervised Learning from Video. arXiv:2104.00682 [cs](2021). arxiv:2104.00682\u00a0[cs]",
      "doi": ""
    },
    {
      "text": "Kaiyang Zhou, Yongxin Yang, Yu Qiao, and Tao Xiang. 2021. MixStyle Neural Networks for Domain Generalization and Adaptation. arXiv:2107.02053 [cs](2021). arxiv:2107.02053\u00a0[cs]",
      "doi": ""
    },
    {
      "text": "Oleksandr Zinenko, C\u00e9dric Bastoul, and St\u00e9phane Huot. 2015. Manipulating Visualization, Not Codes. In International Workshop on Polyhedral Compilation Techniques (IMPACT). 1\u20138.",
      "doi": ""
    },
    {
      "text": "Oleksandr Zinenko, Stephane Huot, and Cedric Bastoul. 2014. Clint: A Direct Manipulation Tool for Parallelizing Compute-Intensive Program Parts. In 2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 109\u2013112. https://doi.org/10.1109/VLHCC.2014.6883031",
      "doi": ""
    }
  ]
}
{
  "doi": "10.1145/3491102.3502070",
  "title": "An Exploratory Study of Sharing Strategic Programming Knowledge",
  "published": "2022-04-28",
  "proctitle": "CHI '22: Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-15",
  "year": 2022,
  "badges": [],
  "abstract": "In many domains, strategic knowledge is documented and shared through checklists and handbooks. In software engineering, however, developers rarely share strategic knowledge for approaching programming problems, in contrast to other artifacts and despite its importance to productivity and success. To understand barriers to sharing, we simulated a programming strategy knowledge-sharing platform, asking experienced developers to articulate a programming strategy and others to use these strategies while providing feedback. Throughout, we asked strategy authors and users to reflect on the challenges they faced. Our analysis revealed that developers could share strategic knowledge. However, they struggled in choosing a level of detail and understanding the diversity of the potential audience. While authors required substantial feedback, users struggled to give it and authors to interpret it. Our results suggest that sharing strategic knowledge differs from sharing code and raises challenging questions about how knowledge-sharing platforms should support search and feedback.",
  "tags": [
    "Programming strategies",
    "Knowledge sharing"
  ],
  "authors": [
    {
      "name": "Maryam Arab",
      "institution": "Department of Computer Science, George Mason University, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99660096949",
      "orcid": "missing"
    },
    {
      "name": "Thomas D. LaToza",
      "institution": "Department of Computer Science, George Mason University, United States",
      "img": "/do/10.1145/contrib-81314483727/rel-imgonly/thomasnarrowsmall.jpeg",
      "acmid": "81314483727",
      "orcid": "missing"
    },
    {
      "name": "Jenny Liang",
      "institution": "Paul G. Allen School of Computer Science & Engineering, University of Washington, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659472740",
      "orcid": "missing"
    },
    {
      "name": "Amy J. Ko",
      "institution": "The Information School, University of Washington, United States",
      "img": "/do/10.1145/contrib-81100500360/rel-imgonly/2021-02.jpg",
      "acmid": "81100500360",
      "orcid": "missing"
    }
  ],
  "references": [
    {
      "text": "Mark\u00a0S. Ackerman and Thomas\u00a0W. Malone. 1990. Answer Garden: A tool for growing organizational memory. ACM SIGOIS Bulletin 11, 2-3 (1990), 31\u201339. https://doi.org/10.1145/91474.91485",
      "doi": "10.1145/91478.91485"
    },
    {
      "text": "Mark\u00a0S. Ackerman and David\u00a0W. McDonald. 1996. Answer Garden 2: Merging organizational memory with collaborative help. In ACM Conference on Computer-Supported Cooperative Work. 97\u2013105.",
      "doi": ""
    },
    {
      "text": "Nicolette Bakhuisen. 2012. Knowledge sharing using social media in the workplace. Unpublished Master thesis. University Amsterdam, Amsterdam (2012).",
      "doi": ""
    },
    {
      "text": "Sebastian Baltes and Stephan Diehl. 2018. Towards a theory of software development expertise. In ACM Joint Meeting of the European Software Engineering Conference and Symposium on the Foundations of Software Engineering. 187\u2013200. https://doi.org/10.1145/3236024.3236061",
      "doi": "10.1145/3236024.3236061"
    },
    {
      "text": "Len Bass, Paul Clements, and Rick Kazman. 2003. Software architecture in practice. Addison-Wesley Professional.",
      "doi": ""
    },
    {
      "text": "Kent Beck. 2003. Test-driven development: By example. Addison-Wesley Professional.",
      "doi": "10.5555/579193"
    },
    {
      "text": "Marcel B\u00f6hme, Ezekiel\u00a0O. Soremekun, Sudipta Chattopadhyay, Emamurho Ugherughe, and Andreas Zeller. 2017. Where is the bug and how is it fixed? An experiment with practitioners. In ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering. 117\u2013128. https://doi.org/10.1145/3106237.3106255",
      "doi": "10.1145/3106237.3106255"
    },
    {
      "text": "Thomas Chau and Frank Maurer. 2004. Knowledge sharing in Agile software teams. Springer Berlin Heidelberg. 173\u2013183 pages.",
      "doi": ""
    },
    {
      "text": "Wai-Fah Chen and JY\u00a0Richard Liew. 2002. The civil engineering handbook. Crc Press.",
      "doi": ""
    },
    {
      "text": "Richard\u00a0A. DeMillo, Hsin Pan, and Eugene\u00a0H. Spafford. 1996. Critical slicing for software fault localization. In ACM International Symposium on Software Testing and Analysis. 121\u2013134. https://doi.org/10.1145/226295.226310",
      "doi": "10.1145/229000.226310"
    },
    {
      "text": "Davide Falessi, Giovanni Cantone, Rick Kazman, and Philippe Kruchten. 2011. Decision-making techniques for software architecture design: A comparative survey. Comput. Surveys (2011), 33:1\u201333:28. https://doi.org/10.1145/1978802.1978812",
      "doi": "10.1145/1978802.1978812"
    },
    {
      "text": "Margaret\u00a0Ann Francel and Spencer Rugaber. 2001. The value of slicing while debugging. Science of Computer Programming(2001), 151\u2013169. https://doi.org/10.1016/S0167-6423(01)00013-2",
      "doi": ""
    },
    {
      "text": "Robert\u00a0M. Gagne, Walter\u00a0W. Wager, Katharine\u00a0C. Golas, John\u00a0M. Keller, and James\u00a0D. Russell. 2007. Principles of instructional design. Wiley Online Library. 44\u201346 pages.",
      "doi": ""
    },
    {
      "text": "Erich Gamma, Richard Helm, Ralph\u00a0E. Johnson, John\u00a0M. Vlissides, and Grady Booch. 1994. Design patterns: Elements of reusable object-oriented software. Addison-Wesley Professional.",
      "doi": "10.5555/186897"
    },
    {
      "text": "Atul Gawande and John\u00a0Bedford Lloyd. 2010. The checklist manifesto: How to get things right. Vol.\u00a0200. Metropolitan Books New York.",
      "doi": ""
    },
    {
      "text": "Julie Gess-Newsome. 1999. Pedagogical content knowledge: An introduction and orientation. Springer, Dordrecht. 3\u201317 pages. https://doi.org/10.1007/0-306-47217-1_1",
      "doi": ""
    },
    {
      "text": "David\u00a0J. Gilmore. 1990. Expert programming knowledge: A strategic approach. In Psychology of Programming. Elsevier, 223\u2013234. https://doi.org/10.1016/B978-0-12-350772-3.50019-7",
      "doi": ""
    },
    {
      "text": "Robert\u00a0M. Grant. 1996. Toward a knowledge-based theory of the firm. Strategic Management Journal(1996), 109\u2013122. https://doi.org/10.1002/smj.4250171110",
      "doi": ""
    },
    {
      "text": "Thomas\u00a0R.G. Green and R. Navarro. 1995. Programming plans, imagery, and visual programming. Springer. 139\u2013144 pages. https://doi.org/10.1007/978-1-5041-2896-4_23",
      "doi": ""
    },
    {
      "text": "David Hammer and Leema\u00a0K. Berland. 2013. Confusing claims for data: A critique of common practices for presenting qualitative research on learning. Journal of the Learning Sciences 23, 1 (2013), 37\u201346. https://doi.org/10.1080/10508406.2013.802652",
      "doi": ""
    },
    {
      "text": "James Herbsleb and Deependra Moitra. 2001. Global software development. IEEE Software 18(2001), 16 \u2013 20. https://doi.org/10.1109/52.914732",
      "doi": "10.1109/52.914732"
    },
    {
      "text": "R.K. Kavitha and M.S. Irfan\u00a0Ahmed. 2011. A knowledge management framework for agile software development teams. In International Conference on Process Automation, Control, and Computing. IEEE, 1\u20135. https://doi.org/10.1109/PACC.2011.5978877",
      "doi": ""
    },
    {
      "text": "Amy\u00a0J. Ko, Thomas\u00a0D. LaToza, Stephen Hull, Ellen\u00a0A. Ko, William Kwok, Jane Quichocho, Harshitha Akkaraju, and Rishin Pandit. 2019. Teaching explicit programming strategies to adolescents. In ACM Technical Symposium on Computer Science Education. 469\u2013475. https://doi.org/10.1145/3287324.3287371",
      "doi": "10.1145/3287324.3287371"
    },
    {
      "text": "Thomas\u00a0D. LaToza, Maryam Arab, Dastyni Loksa, and Amy\u00a0J. Ko. 2020. Explicit programming strategies. Empirical Software Engineering 25 (2020), 2416\u20132449. https://doi.org/10.1007/s10664-020-09810-1",
      "doi": ""
    },
    {
      "text": "Thomas\u00a0D. LaToza, Gina Venolia, and Robert DeLine. 2006. Maintaining mental models: a study of developer work habits. In IEEE/ACM International Conference on Software Engineering. 492\u2013501. https://doi.org/10.1145/1134285.1134355",
      "doi": "10.1145/1134285.1134355"
    },
    {
      "text": "Leonard, Dorothy A., Walter Swap, and Garvin Barton. 2014. Critical knowledge transfer: Tools for managing your company\u2019s deep smarts. Harvard Business Review Press.",
      "doi": ""
    },
    {
      "text": "Paul\u00a0Luo Li, Amy\u00a0J. Ko, and Jiamin Zhu. 2015. What makes a great software engineer?. In IEEE/ACM International Conference on Software Engineering. 700\u2013710. https://doi.org/10.1109/ICSE.2015.335",
      "doi": ""
    },
    {
      "text": "Dastyni Loksa, Amy\u00a0J. Ko, Will Jernigan, Alannah Oleson, Christopher\u00a0J. Mendez, and Margaret\u00a0M. Burnett. 2016. Programming, problem solving, and self-awareness: effects of explicit guidance. In ACM Conference on Human Factors in Computing Systems. 1449\u20131461. https://doi.org/10.1145/2858036.2858252",
      "doi": "10.1145/2858036.2858252"
    },
    {
      "text": "Lena Mamykina, Bella Manoim, Manas Mittal, George Hripcsak, and Bj\u00f6rn Hartmann. 2011a. Design lessons from the fastest Q&A site in the west. ACM Conference on Human Factors in Computing Systems (2011), 2857\u20132866.",
      "doi": "10.1145/1978942.1979366"
    },
    {
      "text": "Lena Mamykina, Bella Manoim, Manas Mittal, George Hripcsak, and Bj\u00f6rn Hartmann. 2011b. Design lessons from the fastest Q&A site in the west. In ACM Conference on Human Factors in Computing Systems. 2857\u20132866. https://doi.org/10.1145/1978942.1979366",
      "doi": "10.1145/1978942.1979366"
    },
    {
      "text": "Matthew\u00a0B. Miles and A. Huberman. 1994. Qualitative data analysis: An expanded sourcebook. Journal of Environmental Psychology 14 (1994), 336\u2013337. https://doi.org/10.1016/S0272-4944(05)80231-2",
      "doi": ""
    },
    {
      "text": "Emerson Murphy-Hill, Gail\u00a0C. Murphy, Joanna McGrenere, 2015. How do users discover new tools in software development and beyond?Computer-Supported Cooperative Work 24, 5 (2015), 389\u2013422.",
      "doi": ""
    },
    {
      "text": "Greg\u00a0L Nelson, Benjamin Xie, and Amy\u00a0J. Ko. 2017. Comprehension first: Evaluating a novel pedagogy and tutoring system for program tracing in CS1. In ACM Conference on International Computing Education Research. 2\u201311.",
      "doi": "10.1145/3105726.3106178"
    },
    {
      "text": "Sirous Panahi, Jason Watson, and Helen Partridge. 2012. Social media and tacit knowledge sharing: Developing a conceptual model. World academy of science, engineering and technology 64 (2012), 1095\u20131102.",
      "doi": ""
    },
    {
      "text": "Chris Parnin and Christoph Treude. 2011. Measuring API documentation on the web. In ACM International Workshop on Web 2.0 for Software Engineering. 25\u201330. https://doi.org/10.1145/1984701.1984706",
      "doi": "10.1145/1984701.1984706"
    },
    {
      "text": "Elizabeth Poch\u00e9, Nishant Jha, Grant Williams, Jazmine Staten, Miles Vesper, and Anas Mahmoud. 2017. Analyzing user comments on YouTube coding tutorial videos. In IEEE/ACM International Conference on Program Comprehension. IEEE, 196\u2013206.",
      "doi": "10.1109/ICPC.2017.26"
    },
    {
      "text": "Michael Raadt, Richard Watson, and Mark Toleman. 2006. Chick sexing and novice programmers: Explicit instruction of problem solving strategies. In Australasian Conference on Computing Education. 55\u201362.",
      "doi": ""
    },
    {
      "text": "Arthur\u00a0S Reber. 1989. Implicit learning and tacit knowledge. American Psychological Association. 219 pages.",
      "doi": ""
    },
    {
      "text": "Martin\u00a0P. Robillard, Wesley Coelho, and Gail\u00a0C. Murphy. 2004. How effective developers investigate source code: an exploratory study. Transactions on Software Engineering 30, 12 (2004), 889\u2013903. https://doi.org/10.1109/TSE.2004.101",
      "doi": "10.1109/TSE.2004.101"
    },
    {
      "text": "Tobias Roehm, Rebecca Tiarks, Rainer Koschke, and Walid Maalej. 2012. How do professional developers comprehend software?. In IEEE/ACM International Conference on Software Engineering. 255\u2013265.",
      "doi": ""
    },
    {
      "text": "Johnny Salda\u00f1a. 2009. The coding manual for qualitative researchers. Sage Publications Ltd (UK).",
      "doi": ""
    },
    {
      "text": "Mary Shaw and David Garlan. 1996. Software architecture: Perspectives on an emerging discipline. Prentice-Hall, Inc.",
      "doi": ""
    },
    {
      "text": "Xiaobai Shen. 2005. Developing country perspectives on software: Intellectual property and open source - A case study of Microsoft and Linux in China. International Journal of IT Standards and Standardization Research 3 (2005), 21\u201343. https://doi.org/10.4018/jitsr.2005010102",
      "doi": ""
    },
    {
      "text": "Leif Singer, Fernando Marques\u00a0Figueira Filho, and Margaret-Anne\u00a0D. Storey. 2014. Software engineering at the speed of light: how developers stay current using twitter. In IEEE/ACM International Conference on Software Engineering. 211\u2013221. https://doi.org/10.1145/2568225.2568305",
      "doi": "10.1145/2568225.2568305"
    },
    {
      "text": "Elliot Soloway and Kate Ehrlich. 1984. Empirical studies of programming knowledge. IEEE Transactions on Software Engineering SE-10, 5 (1984), 595\u2013609. https://doi.org/10.1109/TSE.1984.5010283",
      "doi": "10.1109/TSE.1984.5010283"
    },
    {
      "text": "Margaret-Anne\u00a0D. Storey, Leif Singer, Brendan Cleary, Fernando Marques\u00a0Figueira Filho, and Alexey Zagalsky. 2014. The (R)evolution of social media in software engineering. In IEEE Future of Software Engineering. 100\u2013116. https://doi.org/10.1145/2593882.2593887",
      "doi": ""
    },
    {
      "text": "Jeffrey Stylos and Brad\u00a0A. Myers. 2006. Mica: A web-search tool for finding API components and examples. In IEEE Visual Languages and Human-Centric Computing. 195\u2013202. https://doi.org/10.1109/VLHCC.2006.32",
      "doi": ""
    },
    {
      "text": "Visvalingam Suppiah and Manjit\u00a0Singh Sandhu. 2011. Organisational culture\u2019s influence on tacit knowledge sharing behaviour. Journal of Knowledge Management 15 (2011), 462\u2013477. https://doi.org/10.1108/13673271111137439",
      "doi": ""
    },
    {
      "text": "Kyle Thayer, Sarah\u00a0E Chasins, and Amy\u00a0J. Ko. 2021. A theory of robust API knowledge. ACM Transactions on Computing Education 21, 1 (2021), 1\u201332.",
      "doi": "10.1145/3444945"
    },
    {
      "text": "Christoph Treude and Lars Grammel. 2012. Crowd Documentation : Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow.",
      "doi": ""
    },
    {
      "text": "Christoph Treude and Margaret-Anne\u00a0D. Storey. 2011. Effective communication of software development knowledge through community portals. In ACM Joint Meeting of the European Software Engineering Conference and Symposium on the Foundations of Software Engineering. 91\u201310. https://doi.org/10.1145/2025113.2025129",
      "doi": "10.1145/2025113.2025129"
    },
    {
      "text": "Jason Tsay, Laura Dabbish, and James Herbsleb. 2014. Influence of social and technical factors for evaluating contribution in GitHub. In International Conference on Software Engineering. 356\u2013366.",
      "doi": "10.1145/2568225.2568315"
    },
    {
      "text": "Jaw-Kai Wang, Melanie Ashleigh, and Edgar Meyer. 2006. Knowledge sharing and team trustworthiness: It\u2019s all about social ties!Knowledge Management Research & Practice(2006), 175\u2013186. https://doi.org/10.1057/palgrave.kmrp.8500098",
      "doi": ""
    },
    {
      "text": "Douglas Wieringa, Christopher Moore, and Valerie Barnes. 1998. Procedure writing: Principles and practices. IEEE.",
      "doi": ""
    },
    {
      "text": "Jeong-Han Woo, Mark\u00a0J. Clayton, Robert\u00a0E. Johnson, Benito\u00a0E. Flores, and Christopher Ellis. 2004. Dynamic knowledge map: Reusing experts\u2019 tacit knowledge in the AEC industry. Automation in Construction 13 (2004), 203\u2013207. https://doi.org/10.1016/j.autcon.2003.09.003",
      "doi": ""
    },
    {
      "text": "Benjamin Xie, Dastyni Loksa, Greg\u00a0L. Nelson, Matthew\u00a0J. Davidson, Dongsheng Dong, Harrison Kwik, Alex\u00a0Hui Tan, Leanne Hwa, Min Li, and Amy\u00a0J. Ko. 2019. A theory of instruction for introductory programming skills. Computer Science Education 29, 2-3 (2019), 205\u2013253. https://doi.org/10.1080/08993408.2019.1565235",
      "doi": ""
    },
    {
      "text": "Benjamin Xie, Greg\u00a0L. Nelson, and Amy\u00a0J. Ko. 2018. An explicit strategy to scaffold novice program tracing. In ACM Technical Symposium on Computer Science Education. 344\u2013349. https://doi.org/10.1145/3159450.3159527",
      "doi": "10.1145/3159450.3159527"
    }
  ]
}
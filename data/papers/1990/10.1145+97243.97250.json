{
  "doi": "10.1145/97243.97250",
  "title": "Using constraints to achieve stability in automatic graph layout algorithms",
  "published": "1990-03-01",
  "proctitle": "CHI '90: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
  "pages": "43-51",
  "year": 1990,
  "badges": [],
  "abstract": "Automatic layout algorithms are commonly used when displaying graphs on the screen because they provide a \u201cnice\u201d drawing of the graph without user intervention. There are, however, a couple of disadvantages to automatic layout. Without user intervention, an automatic layout algorithm is only capable of producing an aesthetically pleasing drawing of the graph. User- or application-specified layout constraints (often concerning the semantics of a graph) are difficult or impossible to specify. A second problem is that automatic layout algorithms seldom make use of information in the current layout when calculating the new layout. This can also be frustrating to the user because whenever a new layout is done, the user's orientation in the graph is lost.\nThis paper suggests using layout constraints to solve both of these problems. We show how user-specified layout constraints may be easily added to many automatic graph layout algorithms. Additionally, the constraints specified by the current layout are used when calculating the new layout to achieve a more stable layout. This approach allows a continuum between manual and automatic layout by allowing the user to specify how stable the graph's layout should be.",
  "authors": [
    {
      "name": "Karl-Friedrich B\u00f6hringer",
      "institution": "Dept. of Computer Science, 4107 Upson Hall, Cornell University, Ithaca, NY",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81100053419",
      "orcid": "missing"
    },
    {
      "name": "Frances Newbery Paulisch",
      "institution": "Institute for Informatics, University of Karlsruhe, D-7500 Karlsruhe 1, West Germany",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659276325",
      "orcid": "missing"
    }
  ],
  "references": [
    {
      "text": "J. F. Allen. Maintaining knowledge about temporal intervals. Communications of the A CM, 26:832-843, 1983.  ",
      "doi": "10.1145/182.358434"
    },
    {
      "text": "C. Batini, E. Nardelli, and R. Tamassia. A layout algorithm for data flow diagrams. IEEE Transactions on Software Engineering, SE-12(4):538-546, April 1986. ",
      "doi": "10.5555/10665.10670"
    },
    {
      "text": "K.-F. BShringer. Stability in graph layout algorithms. Master's thesis, University of Karlsruhe, Institute for Inforrnatics, July 1989. In German.",
      "doi": ""
    },
    {
      "text": "E. Gansner, S. C. North, and K. P. Vo. DAG: A program that draws directed graphs. Software~ Praclice and Experience, 18(11):1047-1062, November 1988.  ",
      "doi": "10.1002/spe.4380181104"
    },
    {
      "text": "A. K. Mackworth. Consistency in networks of relations. Artificial Intelligence, 8:99-118, 1977.",
      "doi": "10.1016/0004-3702%2877%2990007-8"
    },
    {
      "text": "E. B. Messinger. Aulomatic Layou~ of Large Directed Graphs. PhD thesis, University of Washington, Department of Computer Sciences, July 1989. TR Number 88-07-08. ",
      "doi": "10.5555/915007"
    },
    {
      "text": "U. Montanaxi. Networks of constraints: Fundamental properties and applications to picture processing, information Sciences, 7:95-132, 1974.",
      "doi": ""
    },
    {
      "text": "F. J. Newbery. EDGE: An extendible directed graph editor. Techniced Report 8/88, University of Karlsruhe, Institute for Informatics, June 1988.",
      "doi": ""
    },
    {
      "text": "F.J. Newbery. An interface description language for graph editors. In Proc. of the IEEE 1988 Workshop on Visual Languages, Pittsburgh, PA, October 1988.",
      "doi": ""
    },
    {
      "text": "F. Puppe. Introduction to Expert Systems. Springer Verlag, 1988. In German.",
      "doi": ""
    },
    {
      "text": "G. Robins. The ISI grapher: a portable tool for displaying graphs pictorially. Computers in Symbolic Graphs and Communications (see. Sven Moer), Helsinki~ Finland, August 17-18 1987. Symboliikka '87. Information Sciences Institute, Marina Del Rey, CA.",
      "doi": ""
    },
    {
      "text": "L. A. Rowe, M. Davis, E. Messinger, C. Meyer, C. Spirakis, and A. Tuan. A browser for directed graphs. Software~Praetice and Experience, 17(1):61-76, January 1987.  ",
      "doi": "10.1002/spe.4380170107"
    },
    {
      "text": "K. Sugiyama, S. Tagawa, and M. Toda. Methods for visual understanding of hierarchical system structures. IEEE Transactions on Systems, Man, and Cybernetics, SMC-11(2):109- 125, February 1981.",
      "doi": ""
    },
    {
      "text": "R. Tamassia, C. Batini, and M. Talamo. An algorithm for automatic layout of entity relationship diagrams. In C. Davis, S. Jajodia, P. Ng, and R. Yeh, editors, En~ity-Relationship Ap. proach ~o Software Engineering, pages 421-439. North-Holland Publishing Co, 1983. ",
      "doi": ""
    },
    {
      "text": "R. Tamassia, G. D. Battista, and C. Batini. Automatic graph drawing and readability of dingraphs. IEEE Transaciions on Systems, Man, and Cybernetics, SE-18(1):61-79, Jan/Feb 1989.  ",
      "doi": "10.1109/21.87055"
    },
    {
      "text": "W. F. Tichy and F. J. Newbery. Knowledgebased editors for directed graphs. In H. K. Nichols and D. Simpson, editors, ESEC'87, Lecture Notes in Computer Science No. 289, pages 101-109. Springer Verlag, 1987. Proc. of the 1st European Software Engineering Conference. ",
      "doi": "10.5555/36494.36505"
    }
  ]
}
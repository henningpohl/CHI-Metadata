{
  "doi": "10.1145/3411764.3445228",
  "title": "Improving Instruction of Programming Patterns with Faded Parsons Problems",
  "published": "2021-05-07",
  "proctitle": "CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-4",
  "year": 2021,
  "badges": [],
  "abstract": "Learning to recognize and apply programming patterns \u2014 reusable abstractions of code \u2014 is critical to becoming a proficient computer scientist. However, many introductory Computer Science courses do not teach patterns, in part because teaching these concepts requires significant curriculum changes. As an alternative, we explore how a novel user interface for practicing coding \u2014 Faded Parsons Problems \u2014 can support introductory Computer Science students in learning to apply programming patterns. We ran a classroom-based study with 237 students which found that Faded Parsons Problems, or rearranging and completing partially blank lines of code into a valid program, are an effective exercise interface for teaching programming patterns, significantly surpassing the performance of the more standard approaches of code writing and code tracing exercises. Faded Parsons Problems also improve overall code writing ability at a comparable level to code writing exercises, but are preferred by students.",
  "authors": [
    {
      "name": "Nathaniel Weinman",
      "institution": "UC Berkeley, United States",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81504688675",
      "orcid": "missing"
    },
    {
      "name": "Armando Fox",
      "institution": "UC Berkeley, United States",
      "img": "/do/10.1145/contrib-81100498790/rel-imgonly/fox_4.jpg",
      "acmid": "81100498790",
      "orcid": "missing"
    },
    {
      "name": "Marti A. Hearst",
      "institution": "UC Berkeley, United States",
      "img": "/do/10.1145/contrib-81100612246/rel-imgonly/marti_small.jpg",
      "acmid": "81100612246",
      "orcid": "missing"
    }
  ],
  "references": [
    {
      "text": "Owen Astrachan, Garrett Mitchener, Geoffrey Berry, and Landon Cox. 1998. Design patterns: an essential component of CS curricula. In Proceedings of the twenty-ninth SIGCSE technical symposium on Computer science education - SIGCSE '98. ACM Press, New York, NY, USA, 153\u2013160. https://doi.org/10.1145/273133.273182",
      "doi": "10.1145/273133.273182"
    },
    {
      "text": "David Barr, John Harrison, and Leslie Conery. 2011. Computational Thinking: A Digital Age Skill for Everyone.Learning and leading with technology 38 (2011), 20\u201323.",
      "doi": ""
    },
    {
      "text": "Benedict\u00a0Du Boulay. 1986. Some Difficulties of Learning to Program. Journal of Educational Computing Research 2, 1 (Feb. 1986), 57\u201373. https://doi.org/10.2190/3lfx-9rrf-67t8-uvk9",
      "doi": ""
    },
    {
      "text": "Sallyann Bryant, Pablo Romero, and Benedict du Boulay. 2008. Pair programming and the mysterious role of the navigator. International Journal of Human-Computer Studies 66, 7 (July 2008), 519\u2013529. https://doi.org/10.1016/j.ijhcs.2007.03.005",
      "doi": "10.1016/j.ijhcs.2007.03.005"
    },
    {
      "text": "Bureau of Labor Statistics 2018-2019. U.S. Department of Labor, Occupational Outlook Handbook, Software Developers. Bureau of Labor Statistics. https://www.bls.gov/ooh/computer-and-information-technology/software-developers.htm (retrieved on April 22, 2020).",
      "doi": ""
    },
    {
      "text": "William\u00a0G. Chase and Herbert\u00a0A. Simon. 1973. Perception in chess. Cognitive Psychology 4, 1 (Jan. 1973), 55\u201381. https://doi.org/10.1016/0010-0285(73)90004-2",
      "doi": ""
    },
    {
      "text": "Nick Cheng and Brian Harrington. 2017. The Code Mangler: Evaluating Coding Ability Without Writing Any Code. In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education - SIGCSE '17. ACM Press, New York, NY, USA, 123\u2013128. https://doi.org/10.1145/3017680.3017704",
      "doi": "10.1145/3017680.3017704"
    },
    {
      "text": "Michael\u00a0J. Clancy and Marcia\u00a0C. Linn. 1999. Patterns and pedagogy. ACM SIGCSE Bulletin 31, 1 (March 1999), 37\u201342. https://doi.org/10.1145/384266.299673",
      "doi": "10.1145/384266.299673"
    },
    {
      "text": "Quintin Cutts, Sarah Esper, Marlena Fecho, Stephen\u00a0R. Foster, and Beth Simon. 2012. The Abstraction Transition Taxonomy: Developing Desired Learning Outcomes through the Lens of Situated Cognition. In Proceedings of the ninth annual international conference on International computing education research - ICER '12. ACM Press, New York, NY, USA, 63\u201370. https://doi.org/10.1145/2361276.2361290",
      "doi": "10.1145/2361276.2361290"
    },
    {
      "text": "Paul Denny, Andrew Luxton-Reilly, and Beth Simon. 2008. Evaluating a New Exam Question: Parsons Problems. In Proceeding of the fourth international workshop on Computing education research - ICER '08. ACM Press, New York, NY, USA, 113\u2013124. https://doi.org/10.1145/1404520.1404532",
      "doi": ""
    },
    {
      "text": "Barbara\u00a0J. Ericson, James\u00a0D. Foley, and Jochen Rick. 2018. Evaluating the Efficiency and Effectiveness of Adaptive Parsons Problems. In Proceedings of the 2018 ACM Conference on International Computing Education Research. ACM, New York, NY, USA, 60\u201368. https://doi.org/10.1145/3230977.3231000",
      "doi": "10.1145/3230977.3231000"
    },
    {
      "text": "Barbara\u00a0J. Ericson, Lauren\u00a0E. Margulieux, and Jochen Rick. 2017. Solving parsons problems versus fixing and writing code. In Proceedings of the 17th Koli Calling Conference on Computing Education Research - Koli Calling '17. ACM Press, New York, NY, USA, 20\u201329. https://doi.org/10.1145/3141880.3141895",
      "doi": "10.1145/3141880.3141895"
    },
    {
      "text": "Joseph\u00a0L Fleiss and Jacob Cohen. 1973. The equivalence of weighted kappa and the intraclass correlation coefficient as measures of reliability. Educational and psychological measurement 33, 3 (1973), 613\u2013619.",
      "doi": ""
    },
    {
      "text": "Milton Friedman. 1937. The use of ranks to avoid the assumption of normality implicit in the analysis of variance. Journal of the american statistical association 32, 200(1937), 675\u2013701.",
      "doi": ""
    },
    {
      "text": "Philip\u00a0J. Guo. 2013. Online python tutor: embeddable web-based program visualization for cs education. In Proceeding of the 44th ACM technical symposium on Computer science education - SIGCSE '13. ACM Press, New York, NY, USA, 579\u2013584. https://doi.org/10.1145/2445196.2445368",
      "doi": ""
    },
    {
      "text": "Petri Ihantola and Ville Karavirta. 2010. Open source widget for parson\u2019s puzzles. In Proceedings of the fifteenth annual conference on Innovation and technology in computer science education - ITiCSE '10. ACM Press, New York, NY, USA, 302. https://doi.org/10.1145/1822090.1822178",
      "doi": "10.1145/1822090.1822178"
    },
    {
      "text": "Tony Jenkins. 2002. On the difficulty of learning to program. In Proceedings of the 3rd Annual Conference of the LTSN Centre for Information and Computer Sciences, Vol.\u00a04. Citeseer, Loughborough University, Loughborough, Leicestershire, UK, 53\u201358.",
      "doi": ""
    },
    {
      "text": "Marcia\u00a0C. Linn. 2005. The Knowledge Integration Perspective on Learning and Instruction. In The Cambridge Handbook of the Learning Sciences. Cambridge University Press, New York, NY, USA, 243\u2013264. https://doi.org/10.1017/cbo9780511816833.016",
      "doi": ""
    },
    {
      "text": "Marcia\u00a0C. Linn and Michael\u00a0J. Clancy. 1992. The Case for Case Studies of Programming Problems. Commun. ACM 35, 3 (March 1992), 121\u2013132. https://doi.org/10.1145/131295.131301",
      "doi": ""
    },
    {
      "text": "Dastyni Loksa, Amy\u00a0J. Ko, Will Jernigan, Alannah Oleson, Christopher\u00a0J. Mendez, and Margaret\u00a0M. Burnett. 2016. Programming, Problem Solving, and Self-Awareness: Effects of Explicit Guidance. In Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems. ACM, New York, NY, USA, 1449\u20131461. https://doi.org/10.1145/2858036.2858252",
      "doi": "10.1145/2858036.2858252"
    },
    {
      "text": "Sandra\u00a0P. Marshall. 1995. Schemas in Problem Solving. Cambridge University Press, New York, NY, USA. https://doi.org/10.1017/cbo9780511527890",
      "doi": ""
    },
    {
      "text": "Tanya\u00a0J. McGill and Simone\u00a0E. Volet. 1997. A Conceptual Framework for Analyzing Students\u2019 Knowledge of Programming. Journal of Research on Computing in Education 29, 3 (March 1997), 276\u2013297. https://doi.org/10.1080/08886504.1997.10782199",
      "doi": ""
    },
    {
      "text": "Orni Meerbaum-Salant, Michal Armoni, and Mordechai\u00a0(Moti) Ben-Ari. 2013. Learning computer science concepts with Scratch. Computer Science Education 23, 3 (Sept. 2013), 239\u2013264. https://doi.org/10.1080/08993408.2013.832022",
      "doi": ""
    },
    {
      "text": "Joel Michael. 2006. Where's the evidence that active learning works?Advances in Physiology Education 30, 4 (Dec. 2006), 159\u2013167. https://doi.org/10.1152/advan.00053.2006",
      "doi": ""
    },
    {
      "text": "Orna Muller, David Ginat, and Bruria Haberman. 2007. Pattern-oriented instruction and its influence on problem decomposition and solution construction. In Proceedings of the 12th annual SIGCSE conference on Innovation and technology in computer science education - ITiCSE '07. ACM Press, New York, NY, USA, 151\u2013155. https://doi.org/10.1145/1268784.1268830",
      "doi": "10.1145/1268784.1268830"
    },
    {
      "text": "Dale Parsons and Patricia Haden. 2006. Parson\u2019s Programming Puzzles: A Fun and Effective Learning Tool for First Programming Courses. In Proceedings of the 8th Australasian Conference on Computing Education - Volume 52 (Hobart, Australia) (ACE \u201906). Australian Computer Society, Inc., AUS, 157\u2013163.",
      "doi": "10.5555/1151869.1151890"
    },
    {
      "text": "David Perkins and Gavriel Salomon. 1992. Transfer Of Learning. International encyclopedia of education 2 (1992), 6452\u20136457.",
      "doi": ""
    },
    {
      "text": "Mona Rizvi, Thorna Humphries, Debra Major, Meghan Jones, and Heather Lauzun. 2011. A CS0 course using Scratch. Journal of Computing Sciences in Colleges 26, 3 (2011), 19\u201327.",
      "doi": "10.5555/1859159.1859166"
    },
    {
      "text": "Anthony Robins, Janet Rountree, and Nathan Rountree. 2003. Learning and Teaching Programming: A Review and Discussion. Computer Science Education 13, 2 (June 2003), 137\u2013172. https://doi.org/10.1076/csed.13.2.137.14200",
      "doi": ""
    },
    {
      "text": "Jorma Sajaniemi and Marja Kuittinen. 2005. An Experiment on Using Roles of Variables in Teaching Introductory Programming. Computer Science Education 15, 1 (March 2005), 59\u201382. https://doi.org/10.1080/08993400500056563",
      "doi": ""
    },
    {
      "text": "C. Scaffidi, M. Shaw, and B. Myers. 2005. Estimating the Numbers of End Users and End User Programmers. In 2005 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC'05). IEEE, Hoboken, NJ, USA, 207\u2013214. https://doi.org/10.1109/vlhcc.2005.34",
      "doi": ""
    },
    {
      "text": "Joshua Shi, Armaan Shah, Garrett Hedman, and Eleanor O'Rourke. 2019. Pyrus: Designing A Collaborative Programming Game to Promote Problem Solving Behaviors. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems - CHI '19. ACM Press, New York, NY, USA, 1\u201312. https://doi.org/10.1145/3290605.3300886",
      "doi": "10.1145/3290605.3300886"
    },
    {
      "text": "James\u00a0C. Spohrer and Elliot Soloway. 1986. Novice mistakes: are the folk wisdoms correct?Commun. ACM 29, 7 (July 1986), 624\u2013632. https://doi.org/10.1145/6138.6145",
      "doi": "10.1145/6138.6145"
    },
    {
      "text": "Nathaniel Weinman, Armando Fox, and Marti Hearst. 2020. Exploring Challenging Variations of Parsons Problems. In Proceedings of the 51st ACM Technical Symposium on Computer Science Education. ACM, New York, NY, USA, 1349. https://doi.org/10.1145/3328778.3372639",
      "doi": "10.1145/3328778.3372639"
    },
    {
      "text": "David Weintrop and Uri Wilensky. 2017. Comparing Block-Based and Text-Based Programming in High School Computer Science Classrooms. ACM Transactions on Computing Education 18, 1 (Dec. 2017), 1\u201325. https://doi.org/10.1145/3089799",
      "doi": "10.1145/3089799"
    },
    {
      "text": "Susan Wiedenbeck, Vikki Fix, and Jean Scholtz. 1993. Characteristics of the mental representations of novice and expert programmers: an empirical study. International Journal of Man-Machine Studies 39, 5 (Nov. 1993), 793\u2013812. https://doi.org/10.1006/imms.1993.1084",
      "doi": "10.1006/imms.1993.1084"
    },
    {
      "text": "Benjamin Xie, Dastyni Loksa, Greg\u00a0L. Nelson, Matthew\u00a0J. Davidson, Dongsheng Dong, Harrison Kwik, Alex\u00a0Hui Tan, Leanne Hwa, Min Li, and Amy\u00a0J. Ko. 2019. A theory of instruction for introductory programming skills. Computer Science Education 29, 2-3 (Jan. 2019), 205\u2013253. https://doi.org/10.1080/08993408.2019.1565235",
      "doi": ""
    },
    {
      "text": "Laura Zavala and Benito Mendoza. 2017. Precursor Skills to Writing Code. J. Comput. Sci. Coll. 32, 3 (Jan. 2017), 149\u2013156.",
      "doi": ""
    }
  ]
}
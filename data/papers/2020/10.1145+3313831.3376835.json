{
  "doi": "10.1145/3313831.3376835",
  "title": "Improving Crowd-Supported GUI Testing with Structural Guidance",
  "published": "2020-04-23",
  "proctitle": "CHI '20: Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems",
  "pages": "1-13",
  "year": 2020,
  "badges": [],
  "abstract": "Crowd testing is an emerging practice in Graphical User Interface (GUI) testing, where developers recruit a large number of crowd testers to test GUI features. It is often easier and faster than a dedicated quality assurance team, and its output is more realistic than that of automated testing. However, crowds of testers working in parallel tend to focus on a small set of commonly-used User Interface (UI) navigation paths, which can lead to low test coverage and redundant effort. In this paper, we introduce two techniques to increase crowd testers' coverage: interactive event-flow graphs and GUI-level guidance. The interactive event-flow graphs track and aggregate every tester's interactions into a single directed graph that visualizes the cases that have already been explored. Crowd testers can interact with the graphs to find new navigation paths and increase the coverage of the created tests. We also use the graphs to augment the GUI (GUI-level guidance) to help testers avoid only exploring common paths. Our evaluation with 30 crowd testers on 11 different test pages shows that the techniques can help testers avoid redundant effort while also increasing untrained testers' coverage by 55%. These techniques can help us develop more robust software that works in more mission-critical settings not only by performing more thorough testing with the same effort that has been put in before but also by integrating them into different parts of the development pipeline to make more reliable software in the early development stage.",
  "tags": [
    "software testing",
    "crowdsourcing",
    "GUI testing"
  ],
  "authors": [
    {
      "name": "Yan Chen",
      "institution": "University of Michigan, Ann Arbor, MI, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81545656256",
      "orcid": "missing"
    },
    {
      "name": "Maulishree Pandey",
      "institution": "University of Michigan, Ann Arbor, MI, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659281805",
      "orcid": "missing"
    },
    {
      "name": "Jean Y. Song",
      "institution": "University of Michigan, Ann Arbor, MI, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "99659249417",
      "orcid": "0000-0003-4379-3971"
    },
    {
      "name": "Walter S. Lasecki",
      "institution": "University of Michigan, Ann Arbor, MI, USA",
      "img": "/pb-assets/icons/DOs/default-profile-1543932446943.svg",
      "acmid": "81490695200",
      "orcid": "missing"
    },
    {
      "name": "Steve Oney",
      "institution": "University of Michigan, Ann Arbor, MI, USA",
      "img": "/do/10.1145/contrib-81453662914/rel-imgonly/81453662914.jpg",
      "acmid": "81453662914",
      "orcid": "0000-0002-5823-1499"
    }
  ],
  "references": [
    {
      "text": "2018. Selenium browser automation. (2018). https://www.seleniumhq.org/ Accessed: Sep, 2019.",
      "doi": ""
    },
    {
      "text": "Amazon. 2018. Amazon Mechanical Turk. https://www.mturk.com/. Accessed: Sep, 2019.",
      "doi": ""
    },
    {
      "text": "Applause. 2019. UTest. https://www.utest.com/. Accessed: Sep, 2019.",
      "doi": ""
    },
    {
      "text": "Shay Artzi, Julian Dolby, Simon Holm Jensen, Anders M\u00f8ller, and Frank Tip. 2011. A framework for automated testing of javascript web applications. In Proceedings of the 33rd International Conference on Software Engineering. ACM, 571--580.",
      "doi": "10.1145/1985793.1985871"
    },
    {
      "text": "Josh Attenberg, Panagiotis G Ipeirotis, and Foster J Provost. 2011. Beat the Machine: Challenging Workers to Find the Unknown Unknowns. Human Computation 11, 11 (2011), 2--7.",
      "doi": "10.5555/2908698.2908699"
    },
    {
      "text": "Baidu. 2019. Baidu Crowd Test platform. http://test.baidu.com/crowdtest/crowdhome/guide. Accessed: Sep, 2019.",
      "doi": ""
    },
    {
      "text": "Sebastian Bauersfeld and Tanja Vos. 2012. A reinforcement learning approach to automated gui robustness testing. In Fast abstracts of the 4th symposium on search-based software engineering (SSBSE 2012). 7--12.",
      "doi": ""
    },
    {
      "text": "Penelope A Brooks and Atif M Memon. 2007. Automated GUI testing guided by usage profles. In Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering. ACM, 333--342.",
      "doi": "10.1145/1321631.1321681"
    },
    {
      "text": "Lydia B Chilton, Greg Little, Darren Edge, Daniel S Weld, and James A Landay. 2013. Cascade: Crowdsourcing taxonomy creation. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1999--2008.",
      "doi": "10.1145/2470654.2466265"
    },
    {
      "text": "Wontae Choi, George Necula, and Koushik Sen. 2013. Guided gui testing of android apps with minimal restart and approximate learning. In Acm Sigplan Notices, Vol. 48. ACM, 623--640.",
      "doi": "10.1145/2544173.2509552"
    },
    {
      "text": "Qiang Cui, Song Wang, Junjie Wang, Yuanzhe Hu, Qing Wang, and Mingshu Li. 2017. Multi-objective crowd worker selection in crowdsourced testing. In 29th International Conference on Software Engineering and Knowledge Engineering (SEKE). 218--223.",
      "doi": ""
    },
    {
      "text": "Biplab Deka, Zifeng Huang, Chad Franzen, Joshua Hibschman, Daniel Afergan, Yang Li, Jeffrey Nichols, and Ranjitha Kumar. 2017a. Rico: A mobile app dataset for building data-driven design applications. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology. ACM, 845--854.",
      "doi": "10.1145/3126594.3126651"
    },
    {
      "text": "Biplab Deka, Zifeng Huang, Chad Franzen, Jeffrey Nichols, Yang Li, and Ranjitha Kumar. 2017b. ZIPT: Zero-Integration Performance Testing of Mobile App Designs. In Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology. ACM, 727--736.",
      "doi": "10.1145/3126594.3126647"
    },
    {
      "text": "Morgan Dixon and James Fogarty. 2010. Prefab: implementing advanced behaviors using pixel-based reverse engineering of interface structure. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 1525--1534.",
      "doi": "10.1145/1753326.1753554"
    },
    {
      "text": "Eelco Dolstra, Raynor Vliegendhart, and Johan Pouwelse. 2013. Crowdsourcing gui tests. In Software Testing, Verifcation and Validation (ICST), 2013 IEEE Sixth International Conference on. IEEE, 332--341.",
      "doi": ""
    },
    {
      "text": "Markus Ermuth and Michael Pradel. 2016. Monkey see, monkey do: effective generation of GUI tests with inferred macro events. In Proceedings of the 25th International Symposium on Software Testing and Analysis. ACM, 82--93.",
      "doi": "10.1145/2931037.2931053"
    },
    {
      "text": "Forrest Huang, John F Canny, and Jeffrey Nichols. 2019. Swire: Sketch-based User Interface Retrieval. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems. ACM, 104.",
      "doi": "10.1145/3290605.3300334"
    },
    {
      "text": "Juha Itkonen and Mika V M\u00e4ntyl\u00e4. 2014. Are test cases needed? Replicated comparison between exploratory and test-case-based software testing. Empirical Software Engineering 19, 2 (2014), 303--342.",
      "doi": "10.1007/s10664-013-9266-8"
    },
    {
      "text": "Sean Kross and Philip J Guo. 2018. Students, systems, and interactions: synthesizing the frst four years of learning@ scale and charting the future. In Proceedings of the Fifth Annual ACM Conference on Learning at Scale. ACM, 2.",
      "doi": "10.1145/3231644.3231662"
    },
    {
      "text": "Rick Kuhn, Yu Lei, and Raghu Kacker. 2008. Practical combinatorial testing: Beyond pairwise. It Professional 10, 3 (2008), 19--23.",
      "doi": "10.1109/MITP.2008.54"
    },
    {
      "text": "Ranjitha Kumar, Arvind Satyanarayan, Cesar Torres, Maxine Lim, Salman Ahmad, Scott R Klemmer, and Jerry O Talton. 2013. Webzeitgeist: design mining the web. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 3083--3092.",
      "doi": "10.1145/2470654.2466420"
    },
    {
      "text": "Walter Lasecki, Tessa Lau, Grant He, and Jeffrey Bigham. 2012. Crowd-based recognition of web interaction patterns. In Adjunct proceedings of the 25th annual ACM symposium on User interface software and technology. ACM, 99--100.",
      "doi": "10.1145/2380296.2380341"
    },
    {
      "text": "Walter S Lasecki, Rachel Wesley, Jeffrey Nichols, Anand Kulkarni, James F Allen, and Jeffrey P Bigham. 2013. Chorus: a crowd-powered conversational assistant. In Proceedings of the 26th annual ACM symposium on User interface software and technology. ACM, 151--162.",
      "doi": "10.1145/2501988.2502057"
    },
    {
      "text": "Toby Jia-Jun Li, Igor Labutov, Xiaohan Nancy Li, Xiaoyi Zhang, Wenze Shi, Wanling Ding, Tom M Mitchell, and Brad A Myers. 2018. APPINITE: A Multi-Modal Interface for Specifying Data Descriptions in Programming by Demonstration Using Natural Language Instructions. In 2018 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). IEEE, 105--114.",
      "doi": ""
    },
    {
      "text": "Mario Linares-V\u00e1squez, Martin White, Carlos Bernal-C\u00e1rdenas, Kevin Moran, and Denys Poshyvanyk. 2015. Mining android app usages for generating actionable gui-based execution scenarios. In Mining Software Repositories (MSR), 2015 IEEE/ACM 12th Working Conference on. IEEE, 111--122.",
      "doi": ""
    },
    {
      "text": "Thomas F Liu, Mark Craft, Jason Situ, Ersin Yumer, Radomir Mech, and Ranjitha Kumar. 2018. Learning design semantics for mobile apps. In The 31st Annual ACM Symposium on User Interface Software and Technology. ACM, 569--579.",
      "doi": "10.1145/3242587.3242650"
    },
    {
      "text": "Ke Mao, Licia Capra, Mark Harman, and Yue Jia. 2015. A survey of the use of crowdsourcing in software engineering. Rn 15, 01 (2015).",
      "doi": ""
    },
    {
      "text": "Ke Mao, Mark Harman, and Yue Jia. 2017. Crowd intelligence enhances automated mobile testing. In Automated Software Engineering (ASE), 2017 32nd IEEE/ACM International Conference on. IEEE, 16--26.",
      "doi": ""
    },
    {
      "text": "Justin Matejka, Tovi Grossman, and George Fitzmaurice. 2013. Patina: Dynamic heatmaps for visualizing application usage. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 3227--3236.",
      "doi": "10.1145/2470654.2466442"
    },
    {
      "text": "Atif M Memon. 2002. GUI testing: Pitfalls and process. Computer 8 (2002), 87--88.",
      "doi": "10.1109/MC.2002.1023795"
    },
    {
      "text": "Atif M Memon. 2007. An event-fow model of GUI-based applications for testing. Software testing, verifcation and reliability 17, 3 (2007), 137--157.",
      "doi": ""
    },
    {
      "text": "Atif M Memon and Bao N Nguyen. 2010. Advances in automated model-based system testing of software applications with a GUI front-end. In Advances in Computers. Vol. 80. Elsevier, 121--162.",
      "doi": ""
    },
    {
      "text": "Atif M Memon, Mary Lou Soffa, and Martha E Pollack. 2001. Coverage criteria for GUI testing. ACM SIGSOFT Software Engineering Notes 26, 5 (2001), 256--267.",
      "doi": "10.1145/503271.503244"
    },
    {
      "text": "Yuan Miao and Xuebing Yang. 2010. An FSM based GUI test automation model. In 2010 11th International Conference on Control Automation Robotics & Vision. IEEE, 120--126.",
      "doi": ""
    },
    {
      "text": "Mark Micallef, Chris Porter, and Andrea Borg. 2016. Do exploratory testers need formal training? an investigation using hci techniques. In Software Testing, Verifcation and Validation Workshops (ICSTW), 2016 IEEE Ninth International Conference on. IEEE, 305--314.",
      "doi": ""
    },
    {
      "text": "Amin Milani Fard, Mehdi Mirzaaghaei, and Ali Mesbah. 2014. Leveraging existing tests in automated test generation for web applications. In Proceedings of the 29th ACM/IEEE international conference on Automated software engineering. ACM, 67--78.",
      "doi": ""
    },
    {
      "text": "Brad A Myers. 1991. Separating application code from toolkits: eliminating the spaghetti of call-backs. In UIST, Vol. 91. Citeseer, 211--220.",
      "doi": "10.1145/120782.120805"
    },
    {
      "text": "Michael Nebeling, Maximilian Speicher, Michael Grossniklaus, and Moira C Norrie. 2012. Crowdsourced web site evaluation with crowdstudy. In International Conference on Web Engineering. Springer, 494--497.",
      "doi": "10.1007/978-3-642-31753-8_52"
    },
    {
      "text": "Bao N Nguyen, Bryan Robbins, Ishan Banerjee, and Atif Memon. 2014. GUITAR: an innovative tool for automated testing of GUI-driven software. Automated software engineering 21, 1 (2014), 65--105.",
      "doi": ""
    },
    {
      "text": "Peter Pirolli and Stuart Card. 1999. Information foraging. Psychological review 106, 4 (1999), 643.",
      "doi": ""
    },
    {
      "text": "Dudekula Mohammad Raf, Katam Reddy Kiran Moses, Kai Petersen, and Mika V M\u00e4ntyl\u00e4. 2012. Benefts and limitations of automated software testing: Systematic literature review and practitioner survey. In Proceedings of the 7th International Workshop on Automation of Software Test. IEEE Press, 36--42.",
      "doi": ""
    },
    {
      "text": "Katharina Reinecke, Tom Yeh, Luke Miratrix, Rahmatri Mardiko, Yuechen Zhao, Jenny Liu, and Krzysztof Z Gajos. 2013. Predicting users' frst impressions of website aesthetics with a quantifcation of perceived visual complexity and colorfulness. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM, 2049--2058.",
      "doi": "10.1145/2470654.2481281"
    },
    {
      "text": "Brian Robinson, Patrick Francis, and Fredrik Ekdahl. 2008. A defect-driven process for software quality improvement. In Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement. ACM, 333--335.",
      "doi": "10.1145/1414004.1414072"
    },
    {
      "text": "Urko Rueda, Anna Esparcia-Alc\u00e1zar, and Tanja EJ Vos. 2016. Visualization of automated test results obtained by the TESTAR tool.. In CIbSE. 53--66.",
      "doi": ""
    },
    {
      "text": "Inc. UserTesting. 2019. UserTesting. https://www.usertesting.com/. Accessed: Sep, 2019.",
      "doi": ""
    },
    {
      "text": "Luis Von Ahn and Laura Dabbish. 2004. Labeling images with a computer game. In Proceedings of the SIGCHI conference on Human factors in computing systems. ACM, 319--326.",
      "doi": "10.1145/985692.985733"
    },
    {
      "text": "Tanja EJ Vos, Peter M Kruse, Nelly Condori-Fern\u00e1ndez, Sebastian Bauersfeld, and Joachim Wegener. 2015. Testar: Tool support for test automation at the user interface level. International Journal of Information System Modeling and Design (IJISMD) 6, 3 (2015), 46--83.",
      "doi": "10.4018/IJISMD.2015070103"
    },
    {
      "text": "Junjie Wang, Qiang Cui, Song Wang, and Qing Wang. 2017. Domain adaptation for test report classification in crowdsourced testing. In Proceedings of the 39th International Conference on Software Engineering: Software Engineering in Practice Track. IEEE Press, 83--92.",
      "doi": "10.1109/ICSE-SEIP.2017.8"
    },
    {
      "text": "Junjie Wang, Mingyang Li, Song Wang, Tim Menzies, and Qing Wang. 2018. Cutting Away the Confusion From Crowdtesting. arXiv preprint arXiv:1805.02763 (2018).",
      "doi": ""
    },
    {
      "text": "Junjie Wang, Song Wang, Qiang Cui, and Qing Wang. 2016. Local-based active classifcation of test report to assist crowdsourced testing. In Automated Software Engineering (ASE), 2016 31st IEEE/ACM International Conference on. IEEE, 190--201.",
      "doi": "10.1145/2970276.2970300"
    },
    {
      "text": "James A Whittaker. 2009. Exploratory software testing: tips, tricks, tours, and techniques to guide test design. Pearson Education.",
      "doi": ""
    },
    {
      "text": "Wesley Willett, Jeffrey Heer, and Maneesh Agrawala. 2007. Scented widgets: Improving navigation cues with embedded visualizations. IEEE Transactions on Visualization and Computer Graphics 13, 6 (2007), 1129--1136.",
      "doi": "10.1109/TVCG.2007.70589"
    },
    {
      "text": "Miao Xie, Qing Wang, Guowei Yang, and Mingshu Li. 2017. Cocoon: Crowdsourced testing quality maximization under context coverage constraint. In Software Reliability Engineering (ISSRE), 2017 IEEE 28th International Symposium on. IEEE, 316--327.",
      "doi": ""
    },
    {
      "text": "Qing Xie and Atif M Memon. 2007. Designing and comparing automated test oracles for GUI-based software applications. ACM Transactions on Software Engineering and Methodology (TOSEM) 16, 1 (2007), 4.",
      "doi": "10.1145/1189748.1189752"
    },
    {
      "text": "Tom Yeh, Tsung-Hsiang Chang, and Robert C Miller. 2009. Sikuli: using GUI screenshots for search and automation. In Proceedings of the 22nd annual ACM symposium on User interface software and technology. ACM, 183--192.",
      "doi": "10.1145/1622176.1622213"
    }
  ]
}